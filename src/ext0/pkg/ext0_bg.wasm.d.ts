/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function init_panic_hook(): void;
export function __wbg_filecreateok_free(a: number): void;
export function __wbg_get_filecreateok_inode(a: number): number;
export function __wbg_set_filecreateok_inode(a: number, b: number): void;
export function __wbg_get_filecreateok_inode_id(a: number): number;
export function __wbg_set_filecreateok_inode_id(a: number, b: number): void;
export function __wbg_get_filecreateok_block_id(a: number): number;
export function __wbg_set_filecreateok_block_id(a: number, b: number): void;
export function __wbg_filehandle_free(a: number): void;
export function __wbg_get_filehandle_mode(a: number): number;
export function __wbg_set_filehandle_mode(a: number, b: number): void;
export function __wbg_get_filehandle_inode_id(a: number): number;
export function __wbg_set_filehandle_inode_id(a: number, b: number): void;
export function __wbg_get_filehandle_ptr_now(a: number): number;
export function __wbg_set_filehandle_ptr_now(a: number, b: number): void;
export function __wbg_get_filehandle_ptr_offset(a: number): number;
export function __wbg_set_filehandle_ptr_offset(a: number, b: number): void;
export function __wbg_get_filehandle_ptr_addr(a: number): number;
export function __wbg_set_filehandle_ptr_addr(a: number, b: number): void;
export function __wbg_get_filehandle_ptr_id(a: number): number;
export function __wbg_set_filehandle_ptr_id(a: number, b: number): void;
export function __wbg_get_filehandle_i_block(a: number): number;
export function __wbg_set_filehandle_i_block(a: number, b: number): void;
export function __wbg_fs_free(a: number): void;
export function fs_new(): number;
export function fs_get_raw(a: number, b: number): void;
export function fs_inode_get_raw_vec(a: number, b: number, c: number): void;
export function fs_inode_get(a: number, b: number): number;
export function fs_file_create(a: number, b: number, c: number, d: number): void;
export function fs_file_open(a: number, b: number, c: number, d: number): void;
export function fs_file_write(a: number, b: number, c: number, d: number, e: number): void;
export function fs_file_read(a: number, b: number, c: number): void;
export function fs_file_close(a: number, b: number, c: number): void;
export function fs_bmap_get(a: number, b: number): number;
export function fs_bmap_set_used(a: number, b: number): void;
export function fs_bmap_set_unused(a: number, b: number): void;
export function fs_bmap_find_unused(a: number): number;
export function fs_imap_get(a: number, b: number): number;
export function fs_imap_set_used(a: number, b: number): void;
export function fs_imap_set_unused(a: number, b: number): void;
export function fs_imap_find_unused(a: number): number;
export function __wbg_inode_free(a: number): void;
export function __wbg_get_inode_mode(a: number): number;
export function __wbg_set_inode_mode(a: number, b: number): void;
export function __wbg_get_inode_size(a: number): number;
export function __wbg_set_inode_size(a: number, b: number): void;
export function __wbg_get_inode_ptr1(a: number): number;
export function __wbg_set_inode_ptr1(a: number, b: number): void;
export function __wbg_get_inode_ptr2(a: number): number;
export function __wbg_set_inode_ptr2(a: number, b: number): void;
export function __wbg_get_inode_ptr3(a: number): number;
export function __wbg_set_inode_ptr3(a: number, b: number): void;
export function __wbg_get_inode_ptr4(a: number): number;
export function __wbg_set_inode_ptr4(a: number, b: number): void;
export function __wbg_get_inode_ptr5(a: number): number;
export function __wbg_set_inode_ptr5(a: number, b: number): void;
export function __wbg_get_inode_uid(a: number): number;
export function __wbg_set_inode_uid(a: number, b: number): void;
export function __wbg_get_inode_gid(a: number): number;
export function __wbg_set_inode_gid(a: number, b: number): void;
export function __wbg_get_inode_atime(a: number): number;
export function __wbg_set_inode_atime(a: number, b: number): void;
export function __wbg_get_inode_mtime(a: number): number;
export function __wbg_set_inode_mtime(a: number, b: number): void;
export function __wbg_get_inode_ctime(a: number): number;
export function __wbg_set_inode_ctime(a: number, b: number): void;
export function inode_to_string(a: number, b: number, c: number): void;
export function filehandle_to_string(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
