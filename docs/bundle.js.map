{
  "version": 3,
  "sources": ["../node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/DecorationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../node_modules/xterm/lib/webpack:/xterm/webpack/startup", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/universalModuleDefinition", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinkProvider.ts", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/bootstrap", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinksAddon.ts", "../node_modules/minimist/index.js", "../node_modules/axios/lib/helpers/bind.js", "../node_modules/axios/lib/utils.js", "../node_modules/axios/lib/helpers/buildURL.js", "../node_modules/axios/lib/core/InterceptorManager.js", "../node_modules/axios/lib/helpers/normalizeHeaderName.js", "../node_modules/axios/lib/core/enhanceError.js", "../node_modules/axios/lib/defaults/transitional.js", "../node_modules/axios/lib/core/createError.js", "../node_modules/axios/lib/core/settle.js", "../node_modules/axios/lib/helpers/cookies.js", "../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../node_modules/axios/lib/helpers/combineURLs.js", "../node_modules/axios/lib/core/buildFullPath.js", "../node_modules/axios/lib/helpers/parseHeaders.js", "../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../node_modules/axios/lib/cancel/Cancel.js", "../node_modules/axios/lib/adapters/xhr.js", "../node_modules/axios/lib/defaults/index.js", "../node_modules/axios/lib/core/transformData.js", "../node_modules/axios/lib/cancel/isCancel.js", "../node_modules/axios/lib/core/dispatchRequest.js", "../node_modules/axios/lib/core/mergeConfig.js", "../node_modules/axios/lib/env/data.js", "../node_modules/axios/lib/helpers/validator.js", "../node_modules/axios/lib/core/Axios.js", "../node_modules/axios/lib/cancel/CancelToken.js", "../node_modules/axios/lib/helpers/spread.js", "../node_modules/axios/lib/helpers/isAxiosError.js", "../node_modules/axios/lib/axios.js", "../node_modules/axios/index.js", "../node_modules/semver-compare/index.js", "../src/external.js", "../node_modules/chalk/source/vendor/ansi-styles/index.js", "../node_modules/chalk/source/vendor/supports-color/browser.js", "../node_modules/chalk/source/utilities.js", "../node_modules/chalk/source/index.js", "../node_modules/ansi-regex/index.js", "../node_modules/strip-ansi/index.js", "../node_modules/simple-async-sleep/index.js", "../node_modules/js-base64/base64.mjs", "../node_modules/diff/lib/index.mjs", "../src/ext0_file_system/pkg/ext0.js", "../src/storage.js", "../src/sandbox.js", "../src/shell.js", "../src/tab_complete.js", "../src/xterm_ex.js", "../src/mobile.js", "../src/status_bar.js", "../src/perm.js", "../src/jsfs_file_system.js", "../src/human_pages.js", "../src/command.js", "../src/artificial_fool.js", "../src/file_builtin.js", "../src/loop.js", "../src/level.js", "../src/index.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService, IDecorationService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'browser/services/DecorationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  public decorationService: IDecorationService;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.decorationService = this.register(this._instantiationService.createInstance(DecorationService));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    this.decorationService.attachToDom(this.screenElement, this._renderService, this._bufferService);\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this.decorationService!.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.rawOptions.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.rawOptions.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '\u2580': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '\u2581': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '\u2582': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '\u2583': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '\u2584': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '\u2585': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '\u2586': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '\u2587': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '\u2588': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '\u2589': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '\u258A': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '\u258B': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '\u258C': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '\u258D': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '\u258E': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '\u258F': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '\u2590': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '\u2594': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '\u2595': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '\u2596': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '\u2597': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '\u2598': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '\u2599': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '\u259A': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '\u259B': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '\u259C': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '\u259D': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '\u259E': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '\u259F': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '\u2591': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '\u2592': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '\u2593': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** \u2502 */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** \u2500 */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** \u2514 */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** \u2518 */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** \u2510 */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** \u250C */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** \u2575 */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** \u2574 */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** \u2576 */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** \u2577 */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** \u2534 */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** \u2524 */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** \u251C */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** \u252C */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** \u253C */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** \u254C */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** \u2504 */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** \u2509 */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** \u254E */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** \u2506 */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** \u250A */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '\u2500': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '\u2501': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '\u2502': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '\u2503': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '\u250C': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '\u250F': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '\u2510': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '\u2513': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '\u2514': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '\u2517': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '\u2518': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '\u251B': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '\u251C': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '\u2523': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '\u2524': { [Style.NORMAL]: Shapes.T_LEFT },\n  '\u252B': { [Style.BOLD]:   Shapes.T_LEFT },\n  '\u252C': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '\u2533': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '\u2534': { [Style.NORMAL]: Shapes.T_TOP },\n  '\u253B': { [Style.BOLD]:   Shapes.T_TOP },\n  '\u253C': { [Style.NORMAL]: Shapes.CROSS },\n  '\u254B': { [Style.BOLD]:   Shapes.CROSS },\n  '\u2574': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '\u2578': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '\u2575': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '\u2579': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '\u2576': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '\u257A': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '\u2577': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u257B': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '\u2550': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '\u2551': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '\u2552': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '\u2553': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '\u2554': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '\u2555': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '\u2556': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '\u2557': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '\u2558': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '\u2559': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '\u255A': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '\u255B': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '\u255C': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '\u255D': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '\u255E': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '\u255F': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '\u2560': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '\u2561': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '\u2562': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '\u2563': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '\u2564': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '\u2565': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '\u2566': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '\u2567': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '\u2568': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '\u2569': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '\u256A': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '\u256B': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '\u256C': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '\u2571': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '\u2572': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '\u2573': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '\u257C': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u257D': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u257E': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u257F': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u250D': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u250E': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2511': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u2512': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2515': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u2516': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u2519': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u251A': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u251D': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u251E': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u251F': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2520': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '\u2521': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '\u2522': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '\u2525': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u2526': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u2527': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2528': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '\u2529': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '\u252A': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '\u252D': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u252E': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u252F': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '\u2530': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2531': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '\u2532': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '\u2535': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u2536': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u2537': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '\u2538': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u2539': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '\u253A': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '\u253D': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '\u253E': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '\u253F': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '\u2540': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '\u2541': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '\u2542': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '\u2543': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '\u2544': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '\u2545': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '\u2546': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '\u2547': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '\u2548': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '\u2549': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '\u254A': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '\u254C': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '\u254D': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '\u2504': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '\u2505': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '\u2508': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '\u2509': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '\u254E': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '\u254F': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '\u2506': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '\u2507': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '\u250A': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '\u250B': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '\u256D': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '\u256E': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '\u256F': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '\u2570': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       \u250E\u2530\u2512\u250D\u252F\u2511\u2553\u2565\u2556\u2552\u2564\u2555 \u250F\u2533\u2513\u250C\u2532\u2513\u250C\u252C\u2510\u250F\u2531\u2510\n * \u250C\u2500\u252C\u2500\u2510 \u250F\u2501\u2533\u2501\u2513 \u2554\u2550\u2566\u2550\u2557 \u2520\u2542\u2528\u251D\u253F\u2525\u255F\u256B\u2562\u255E\u256A\u2561 \u2521\u2547\u2529\u251C\u254A\u252B\u2522\u2548\u252A\u2523\u2549\u2524\n * \u2502 \u2502 \u2502 \u2503 \u2503 \u2503 \u2551 \u2551 \u2551 \u2516\u2538\u251A\u2515\u2537\u2519\u2559\u2568\u255C\u2558\u2567\u255B \u2514\u2534\u2518\u2514\u253A\u251B\u2517\u253B\u251B\u2517\u2539\u2518\n * \u251C\u2500\u253C\u2500\u2524 \u2523\u2501\u254B\u2501\u252B \u2560\u2550\u256C\u2550\u2563 \u250F\u2531\u2510\u250C\u2532\u2513\u250C\u252C\u2510\u250C\u252C\u2510 \u250F\u2533\u2513\u250C\u252E\u2513\u250C\u252C\u2510\u250F\u252D\u2510\n * \u2502 \u2502 \u2502 \u2503 \u2503 \u2503 \u2551 \u2551 \u2551 \u2521\u2543\u2524\u251C\u2544\u2529\u251C\u2546\u252A\u2522\u2545\u2524 \u251E\u2540\u2526\u251C\u253E\u252B\u251F\u2541\u2527\u2523\u253D\u2524\n * \u2514\u2500\u2534\u2500\u2518 \u2517\u2501\u253B\u2501\u251B \u255A\u2550\u2569\u2550\u255D \u2514\u2534\u2518\u2514\u2534\u2518\u2514\u253A\u251B\u2517\u2539\u2518 \u2514\u2534\u2518\u2514\u2536\u251B\u2517\u253B\u251B\u2517\u2535\u2518\n *\n * Other:\n * \u256D\u2500\u256E \u2572 \u2571 \u2577\u257B\u254E\u254F\u2506\u2507\u250A\u250B \u257A\u257E\u2574 \u254C\u254C\u254C \u2504\u2504\u2504 \u2508\u2508\u2508\n * \u2502 \u2502  \u2573  \u257D\u257F\u254E\u254F\u2506\u2507\u250A\u250B \u2576\u257C\u2578 \u254D\u254D\u254D \u2505\u2505\u2505 \u2509\u2509\u2509\n * \u2570\u2500\u256F \u2571 \u2572 \u2579\u2575\u254E\u254F\u2506\u2507\u250A\u250B\n *\n * All box drawing characters:\n * \u2500 \u2501 \u2502 \u2503 \u2504 \u2505 \u2506 \u2507 \u2508 \u2509 \u250A \u250B \u250C \u250D \u250E \u250F\n * \u2510 \u2511 \u2512 \u2513 \u2514 \u2515 \u2516 \u2517 \u2518 \u2519 \u251A \u251B \u251C \u251D \u251E \u251F\n * \u2520 \u2521 \u2522 \u2523 \u2524 \u2525 \u2526 \u2527 \u2528 \u2529 \u252A \u252B \u252C \u252D \u252E \u252F\n * \u2530 \u2531 \u2532 \u2533 \u2534 \u2535 \u2536 \u2537 \u2538 \u2539 \u253A \u253B \u253C \u253D \u253E \u253F\n * \u2540 \u2541 \u2542 \u2543 \u2544 \u2545 \u2546 \u2547 \u2548 \u2549 \u254A \u254B \u254C \u254D \u254E \u254F\n * \u2550 \u2551 \u2552 \u2553 \u2554 \u2555 \u2556 \u2557 \u2558 \u2559 \u255A \u255B \u255C \u255D \u255E \u255F\n * \u2560 \u2561 \u2562 \u2563 \u2564 \u2565 \u2566 \u2567 \u2568 \u2569 \u256A \u256B \u256C \u256D \u256E \u256F\n * \u2570 \u2571 \u2572 \u2573 \u2574 \u2575 \u2576 \u2577 \u2578 \u2579 \u257A \u257B \u257C \u257D \u257E \u257F\n *\n * ---\n *\n * Box drawing alignment tests:                                          \u2588\n *                                                                       \u2589\n *   \u2554\u2550\u2550\u2566\u2550\u2550\u2557  \u250C\u2500\u2500\u252C\u2500\u2500\u2510  \u256D\u2500\u2500\u252C\u2500\u2500\u256E  \u256D\u2500\u2500\u252C\u2500\u2500\u256E  \u250F\u2501\u2501\u2533\u2501\u2501\u2513  \u250E\u2512\u250F\u2511   \u2577  \u257B \u250F\u252F\u2513 \u250C\u2530\u2510    \u258A \u2571\u2572\u2571\u2572\u2573\u2573\u2573\n *   \u2551\u250C\u2500\u2568\u2500\u2510\u2551  \u2502\u2554\u2550\u2567\u2550\u2557\u2502  \u2502\u2552\u2550\u256A\u2550\u2555\u2502  \u2502\u2553\u2500\u2541\u2500\u2556\u2502  \u2503\u250C\u2500\u2542\u2500\u2510\u2503  \u2517\u2543\u2544\u2519  \u2576\u253C\u2574\u257A\u254B\u2578\u2520\u253C\u2528 \u251D\u254B\u2525    \u258B \u2572\u2571\u2572\u2571\u2573\u2573\u2573\n *   \u2551\u2502\u2572 \u2571\u2502\u2551  \u2502\u2551   \u2551\u2502  \u2502\u2502 \u2502 \u2502\u2502  \u2502\u2551 \u2503 \u2551\u2502  \u2503\u2502 \u257F \u2502\u2503  \u250D\u2545\u2546\u2513   \u2575  \u2579 \u2517\u2537\u251B \u2514\u2538\u2518    \u258C \u2571\u2572\u2571\u2572\u2573\u2573\u2573\n *   \u2560\u2561 \u2573 \u255E\u2563  \u251C\u2562   \u255F\u2524  \u251C\u253C\u2500\u253C\u2500\u253C\u2524  \u251C\u256B\u2500\u2542\u2500\u256B\u2524  \u2523\u253F\u257E\u253C\u257C\u253F\u252B  \u2515\u251B\u2516\u251A     \u250C\u2504\u2504\u2510 \u254E \u250F\u2505\u2505\u2513 \u250B \u258D \u2572\u2571\u2572\u2571\u2573\u2573\u2573\n *   \u2551\u2502\u2571 \u2572\u2502\u2551  \u2502\u2551   \u2551\u2502  \u2502\u2502 \u2502 \u2502\u2502  \u2502\u2551 \u2503 \u2551\u2502  \u2503\u2502 \u257D \u2502\u2503  \u2591\u2591\u2592\u2592\u2593\u2593\u2588\u2588 \u250A  \u2506 \u254E \u254F  \u2507 \u250B \u258E\n *   \u2551\u2514\u2500\u2565\u2500\u2518\u2551  \u2502\u255A\u2550\u2564\u2550\u255D\u2502  \u2502\u2558\u2550\u256A\u2550\u255B\u2502  \u2502\u2559\u2500\u2540\u2500\u255C\u2502  \u2503\u2514\u2500\u2542\u2500\u2518\u2503  \u2591\u2591\u2592\u2592\u2593\u2593\u2588\u2588 \u250A  \u2506 \u254E \u254F  \u2507 \u250B \u258F\n *   \u255A\u2550\u2550\u2569\u2550\u2550\u255D  \u2514\u2500\u2500\u2534\u2500\u2500\u2518  \u2570\u2500\u2500\u2534\u2500\u2500\u256F  \u2570\u2500\u2500\u2534\u2500\u2500\u256F  \u2517\u2501\u2501\u253B\u2501\u2501\u251B           \u2514\u254C\u254C\u2518 \u254E \u2517\u254D\u254D\u251B \u250B  \u2581\u2582\u2583\u2584\u2585\u2586\u2587\u2588\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDecorationService, IRenderService } from 'browser/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService } from 'common/services/Services';\nimport { IDecorationOptions, IDecoration, IMarker } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n\n  private readonly _decorations: Decoration[] = [];\n  private _container: HTMLElement | undefined;\n  private _screenElement: HTMLElement | undefined;\n  private _renderService: IRenderService | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(@IInstantiationService private readonly _instantiationService: IInstantiationService) { super(); }\n\n  public attachToDom(screenElement: HTMLElement, renderService: IRenderService): void {\n    this._renderService = renderService;\n    this._screenElement = screenElement;\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    screenElement.appendChild(this._container);\n    this.register(this._renderService.onRenderedBufferChange(() => this.refresh()));\n    this.register(this._renderService.onDimensionsChange(() => this.refresh(true)));\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    if (decorationOptions.marker.isDisposed || !this._container) {\n      return undefined;\n    }\n    const decoration = this._instantiationService.createInstance(Decoration, decorationOptions, this._container);\n    this._decorations.push(decoration);\n    decoration.onDispose(() => this._decorations.splice(this._decorations.indexOf(decoration), 1));\n    this._queueRefresh();\n    return decoration;\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.refresh();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refresh(shouldRecreate?: boolean): void {\n    if (!this._renderService) {\n      return;\n    }\n    for (const decoration of this._decorations) {\n      decoration.render(this._renderService, shouldRecreate);\n    }\n  }\n\n  public dispose(): void {\n    for (const decoration of this._decorations) {\n      decoration.dispose();\n    }\n    if (this._screenElement && this._container && this._screenElement.contains(this._container)) {\n      this._screenElement.removeChild(this._container);\n    }\n  }\n}\nexport class Decoration extends Disposable implements IDecoration {\n  private readonly _marker: IMarker;\n  private _element: HTMLElement | undefined;\n\n  public isDisposed: boolean = false;\n\n  public get element(): HTMLElement | undefined { return this._element; }\n  public get marker(): IMarker { return this._marker; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  private _onRender = new EventEmitter<HTMLElement>();\n  public get onRender(): IEvent<HTMLElement> { return this._onRender.event; }\n\n  public x: number;\n  public anchor: 'left' | 'right';\n  public width: number;\n  public height: number;\n\n  constructor(\n    options: IDecorationOptions,\n    private readonly _container: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.x = options.x ?? 0;\n    this._marker = options.marker;\n    this._marker.onDispose(() => this.dispose());\n    this.anchor = options.anchor || 'left';\n    this.width = options.width || 1;\n    this.height = options.height || 1;\n  }\n\n  public render(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (!this._element || shouldRecreate) {\n      this._createElement(renderService, shouldRecreate);\n    }\n    if (this._container && this._element && !this._container.contains(this._element)) {\n      this._container.append(this._element);\n    }\n    this._refreshStyle(renderService);\n    if (this._element) {\n      this._onRender.fire(this._element);\n    }\n  }\n\n  private _createElement(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (shouldRecreate && this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this._element = document.createElement('div');\n    this._element.classList.add('xterm-decoration');\n    this._element.style.width = `${this.width * renderService.dimensions.actualCellWidth}px`;\n    this._element.style.height = `${this.height * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.top = `${(this.marker.line - this._bufferService.buffers.active.ydisp) * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.lineHeight = `${renderService.dimensions.actualCellHeight}px`;\n\n    if (this.x && this.x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      this._element.style.display = 'none';\n    }\n    if (this.anchor === 'right') {\n      this._element.style.right = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      this._element.style.left = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _refreshStyle(renderService: IRenderService): void {\n    if (!this._element) {\n      return;\n    }\n    const line = this.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line > this._bufferService.rows) {\n      // outside of viewport\n      this._element.style.display = 'none';\n    } else {\n      this._element.style.top = `${line * renderService.dimensions.actualCellHeight}px`;\n      this._element.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }\n  }\n\n  public override dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    if (this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this.isDisposed = true;\n    this._onDispose.fire();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  refresh(): void;\n  attachToDom(screenElement: HTMLElement, renderService: IRenderService, bufferService: IBufferService): void;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public clearMarkers(y?: number): void {\n    this._isClearing = true;\n    if (y !== undefined) {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].line === y) {\n          this.markers[i].dispose();\n          this.markers.splice(i--, 1);\n        }\n      }\n    } else {\n      for (const marker of this.markers) {\n        marker.dispose();\n      }\n      this.markers = [];\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '\u25C6'\n  'a': '\\u2592', // '\u2592'\n  'b': '\\u2409', // '\u2409' (HT)\n  'c': '\\u240c', // '\u240C' (FF)\n  'd': '\\u240d', // '\u240D' (CR)\n  'e': '\\u240a', // '\u240A' (LF)\n  'f': '\\u00b0', // '\u00B0'\n  'g': '\\u00b1', // '\u00B1'\n  'h': '\\u2424', // '\u2424' (NL)\n  'i': '\\u240b', // '\u240B' (VT)\n  'j': '\\u2518', // '\u2518'\n  'k': '\\u2510', // '\u2510'\n  'l': '\\u250c', // '\u250C'\n  'm': '\\u2514', // '\u2514'\n  'n': '\\u253c', // '\u253C'\n  'o': '\\u23ba', // '\u23BA'\n  'p': '\\u23bb', // '\u23BB'\n  'q': '\\u2500', // '\u2500'\n  'r': '\\u23bc', // '\u23BC'\n  's': '\\u23bd', // '\u23BD'\n  't': '\\u251c', // '\u251C'\n  'u': '\\u2524', // '\u2524'\n  'v': '\\u2534', // '\u2534'\n  'w': '\\u252c', // '\u252C'\n  'x': '\\u2502', // '\u2502'\n  'y': '\\u2264', // '\u2264'\n  'z': '\\u2265', // '\u2265'\n  '{': '\\u03c0', // '\u03C0'\n  '|': '\\u2260', // '\u2260'\n  '}': '\\u00a3', // '\u00A3'\n  '~': '\\u00b7'  // '\u00B7'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '\u00A3'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '\u00A3',\n  '@': '\u00BE',\n  '[': 'ij',\n  '\\\\': '\u00BD',\n  ']': '|',\n  '{': '\u00A8',\n  '|': 'f',\n  '}': '\u00BC',\n  '~': '\u00B4'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E9',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '\u00A3',\n  '@': '\u00E0',\n  '[': '\u00B0',\n  '\\\\': '\u00E7',\n  ']': '\u00A7',\n  '{': '\u00E9',\n  '|': '\u00F9',\n  '}': '\u00E8',\n  '~': '\u00A8'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': '\u00E0',\n  '[': '\u00E2',\n  '\\\\': '\u00E7',\n  ']': '\u00EA',\n  '^': '\u00EE',\n  '`': '\u00F4',\n  '{': '\u00E9',\n  '|': '\u00F9',\n  '}': '\u00E8',\n  '~': '\u00FB'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '\u00A7',\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00DC',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00FC',\n  '~': '\u00DF'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '\u00A3',\n  '@': '\u00A7',\n  '[': '\u00B0',\n  '\\\\': '\u00E7',\n  ']': '\u00E9',\n  '`': '\u00F9',\n  '{': '\u00E0',\n  '|': '\u00F2',\n  '}': '\u00E8',\n  '~': '\u00EC'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': '\u00C4',\n  '[': '\u00C6',\n  '\\\\': '\u00D8',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E4',\n  '{': '\u00E6',\n  '|': '\u00F8',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '\u00A3',\n  '@': '\u00A7',\n  '[': '\u00A1',\n  '\\\\': '\u00D1',\n  ']': '\u00BF',\n  '{': '\u00B0',\n  '|': '\u00F1',\n  '}': '\u00E7'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': '\u00C9',\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E9',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': '\u00F9',\n  '@': '\u00E0',\n  '[': '\u00E9',\n  '\\\\': '\u00E7',\n  ']': '\u00EA',\n  '^': '\u00EE',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': '\u00E8',\n  '`': '\u00F4',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00FC',\n  '~': '\u00FB'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebLinksAddon\"] = factory();\n\telse\n\t\troot[\"WebLinksAddon\"] = factory();\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkProvider, ILink, Terminal, IViewportRange } from 'xterm';\n\ninterface ILinkProviderOptions {\n  hover?(event: MouseEvent, text: string, location: IViewportRange): void;\n  leave?(event: MouseEvent, text: string): void;\n}\n\nexport class WebLinkProvider implements ILinkProvider {\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _regex: RegExp,\n    private readonly _handler: (event: MouseEvent, uri: string) => void,\n    private readonly _options: ILinkProviderOptions = {}\n  ) {\n\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const links = LinkComputer.computeLink(y, this._regex, this._terminal, this._handler);\n    callback(this._addCallbacks(links));\n  }\n\n  private _addCallbacks(links: ILink[]): ILink[] {\n    return links.map(link => {\n      link.leave = this._options.leave;\n      link.hover = (event: MouseEvent, uri: string): void => {\n        if (this._options.hover) {\n          const { range } = link;\n          this._options.hover(event, uri, range);\n        }\n      };\n      return link;\n    });\n  }\n}\n\nexport class LinkComputer {\n  public static computeLink(y: number, regex: RegExp, terminal: Terminal, activate: (event: MouseEvent, uri: string) => void): ILink[] {\n    const rex = new RegExp(regex.source, (regex.flags || '') + 'g');\n\n    const [line, startLineIndex] = LinkComputer._translateBufferLineToStringWithWrap(y - 1, false, terminal);\n\n    let match;\n    let stringIndex = -1;\n    const result: ILink[] = [];\n\n    while ((match = rex.exec(line)) !== null) {\n      const text = match[1];\n      if (!text) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        console.log('match found without corresponding matchIndex');\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = line.indexOf(text, stringIndex + 1);\n      rex.lastIndex = stringIndex + text.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      let endX = stringIndex + text.length;\n      let endY = startLineIndex + 1;\n\n      while (endX > terminal.cols) {\n        endX -= terminal.cols;\n        endY++;\n      }\n\n      const range = {\n        start: {\n          x: stringIndex + 1,\n          y: startLineIndex + 1\n        },\n        end: {\n          x: endX,\n          y: endY\n        }\n      };\n\n      result.push({ range, text, activate });\n    }\n\n    return result;\n  }\n\n  /**\n   * Gets the entire line for the buffer line\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param terminal The terminal\n   */\n  private static _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean, terminal: Terminal): [string, number] {\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n    let prevLinesToWrap: boolean;\n\n    do {\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n\n      if (line.isWrapped) {\n        lineIndex--;\n      }\n\n      prevLinesToWrap = line.isWrapped;\n    } while (prevLinesToWrap);\n\n    const startLineIndex = lineIndex;\n\n    do {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return [lineString, startLineIndex];\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ILinkMatcherOptions, ITerminalAddon, IDisposable, IViewportRange } from 'xterm';\nimport { WebLinkProvider } from './WebLinkProvider';\n\nconst protocolClause = '(https?:\\\\/\\\\/)';\nconst domainCharacterSet = '[\\\\da-z\\\\.-]+';\nconst negatedDomainCharacterSet = '[^\\\\da-z\\\\.-]+';\nconst domainBodyClause = '(' + domainCharacterSet + ')';\nconst tldClause = '([a-z\\\\.]{2,18})';\nconst ipClause = '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})';\nconst localHostClause = '(localhost)';\nconst portClause = '(:\\\\d{1,5})';\nconst hostClause = '((' + domainBodyClause + '\\\\.' + tldClause + ')|' + ipClause + '|' + localHostClause + ')' + portClause + '?';\nconst pathCharacterSet = '(\\\\/[\\\\/\\\\w\\\\.\\\\-%~:+@]*)*([^:\"\\'\\\\s])';\nconst pathClause = '(' + pathCharacterSet + ')?';\nconst queryStringHashFragmentCharacterSet = '[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&\\'*+,:;~\\\\=\\\\.\\\\-]*';\nconst queryStringClause = '(\\\\?' + queryStringHashFragmentCharacterSet + ')?';\nconst hashFragmentClause = '(#' + queryStringHashFragmentCharacterSet + ')?';\nconst negatedPathCharacterSet = '[^\\\\/\\\\w\\\\.\\\\-%]+';\nconst bodyClause = hostClause + pathClause + queryStringClause + hashFragmentClause;\nconst start = '(?:^|' + negatedDomainCharacterSet + ')(';\nconst end = ')($|' + negatedPathCharacterSet + ')';\nconst strictUrlRegex = new RegExp(start + protocolClause + bodyClause + end);\n\nfunction handleLink(event: MouseEvent, uri: string): void {\n  const newWindow = window.open();\n  if (newWindow) {\n    try {\n      newWindow.opener = null;\n    } catch {\n      // no-op, Electron can throw\n    }\n    newWindow.location.href = uri;\n  } else {\n    console.warn('Opening link blocked as opener could not be cleared');\n  }\n}\n\ninterface ILinkProviderOptions {\n  hover?(event: MouseEvent, text: string, location: IViewportRange): void;\n  leave?(event: MouseEvent, text: string): void;\n  urlRegex?: RegExp;\n}\n\nexport class WebLinksAddon implements ITerminalAddon {\n  private _linkMatcherId: number | undefined;\n  private _terminal: Terminal | undefined;\n  private _linkProvider: IDisposable | undefined;\n\n  constructor(\n    private _handler: (event: MouseEvent, uri: string) => void = handleLink,\n    private _options: ILinkMatcherOptions | ILinkProviderOptions = {},\n    private _useLinkProvider: boolean = false\n  ) {\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n\n    if (this._useLinkProvider && 'registerLinkProvider' in this._terminal) {\n      const options = this._options as ILinkProviderOptions;\n      const regex = options.urlRegex || strictUrlRegex;\n      this._linkProvider = this._terminal.registerLinkProvider(new WebLinkProvider(this._terminal, regex, this._handler, options));\n    } else {\n      // TODO: This should be removed eventually\n      const options = this._options as ILinkMatcherOptions;\n      options.matchIndex = 1;\n      this._linkMatcherId = (this._terminal as Terminal).registerLinkMatcher(strictUrlRegex, this._handler, options);\n    }\n  }\n\n  public dispose(): void {\n    if (this._linkMatcherId !== undefined && this._terminal !== undefined) {\n      this._terminal.deregisterLinkMatcher(this._linkMatcherId);\n    }\n\n    this._linkProvider?.dispose();\n  }\n}\n", "module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        for (var i = 0; i < keys.length-1; i++) {\n            var key = keys[i];\n            if (isConstructorOrProto(o, key)) return;\n            if (o[key] === undefined) o[key] = {};\n            if (o[key] === Object.prototype || o[key] === Number.prototype\n                || o[key] === String.prototype) o[key] = {};\n            if (o[key] === Array.prototype) o[key] = [];\n            o = o[key];\n        }\n\n        var key = keys[keys.length - 1];\n        if (isConstructorOrProto(o, key)) return;\n        if (o === Object.prototype || o === Number.prototype\n            || o === String.prototype) o = {};\n        if (o === Array.prototype) o = [];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /^(true|false)$/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n\nfunction isConstructorOrProto (obj, key) {\n    return key === 'constructor' && typeof obj[key] === 'function' || key === '__proto__';\n}\n", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.26.1\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "module.exports = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n", "const initQ = []\nconst abortQ = []\n\nimport { Terminal } from \"xterm\"\nimport { WebLinksAddon } from \"xterm-addon-web-links\"\nglobalThis.term = new Terminal({\n\trows: 30,\n\tcols: 97,\n\tcursorBlink: true,\n\tfontFamily: `\"Fira Code\", consolas, monospace`,\n\tbellStyle: \"none\"\n})\nterm.loadAddon(new WebLinksAddon)\nterm.open(document.getElementById(\"xterm\"))\nterm.focus()\n\nimport chalk from \"chalk\"\nchalk.level = 3 // true colors\n\nimport stripAnsi from \"strip-ansi\"\nconst stringWidth = s => [ ...stripAnsi(s) ].reduce((a, c) => (\n\ta + term._core._inputHandler._unicodeService.wcwidth(c.charCodeAt())\n), 0)\n\nimport sleep from \"simple-async-sleep\"\nimport minimist from \"minimist\"\nimport { Base64 } from \"js-base64\"\nimport * as Diff from \"diff\"\nimport _axios from \"axios\"\nconst axios = new Proxy(_axios, {\n\tget: (_, k) => (url, opt) => {\n\t\tconst ac = new AbortController()\n\t\tabortQ.push(() => ac.abort())\n\t\treturn _axios[k](url, {\n\t\t\t...opt,\n\t\t\tsignal: ac.signal\n\t\t}).finally(() => abortQ.pop)\n\t}\n})\n\nimport cmpSemVer from \"semver-compare\"\n\nimport pack from \"../package.json\"\n\nimport wasmbin from \"./ext0_file_system/pkg/ext0_bg.wasm\"\nimport wasminit, {\n\tinit_panic_hook,\n\tFS, FileType, FileHandle, FileHandleMode, FileCreateOk, INode,\n} from \"./ext0_file_system/pkg\"\n\nconst __debug = location.hostname === \"localhost\"\nconst __mobile = (\"ontouchstart\" in document.documentElement && /mobi/i.test(navigator.userAgent))\n\ninitQ.push(async () =>\n\tawait wasminit(wasmbin).then(() => {\n\t\tif (__debug) init_panic_hook()\n\t})\n)\n\nObject.assign(globalThis, {\n\tinitQ, abortQ,\n\tTerminal, WebLinksAddon,\n\tchalk,\n\tstripAnsi, stringWidth,\n\tpack,\n\tsleep,\n\tminimist,\n\tBase64,\n\tDiff,\n\taxios,\n\tcmpSemVer,\n\text0: {\n\t\twasmbin, wasminit,\n\t\tFS, FileType, FileHandle, FileHandleMode, FileCreateOk, INode\n\t},\n\t__debug, __mobile\n})\n", "const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29],\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39],\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49],\n\t\t},\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n", "/* eslint-env browser */\n\nconst isBlinkBasedBrowser = /\\b(Chrome|Chromium)\\//.test(navigator.userAgent);\n\nconst colorSupport = isBlinkBasedBrowser ? {\n\tlevel: 1,\n\thasBasic: true,\n\thas256: false,\n\thas16m: false,\n} : false;\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\nexport default supportsColor;\n", "// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n", "import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n", "export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n", "import ansiRegex from 'ansi-regex';\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\treturn string.replace(ansiRegex(), '');\n}\n", "const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\nexport default sleep\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = void 0;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          // This should not happen, but we want to be safe.\n\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080\u201300FF\n//  - U+00D7  \u00D7 Multiplication sign\n//  - U+00F7  \u00F7 Division sign\n// Latin Extended-A, 0100\u2013017F\n// Latin Extended-B, 0180\u2013024F\n// IPA Extensions, 0250\u201302AF\n// Spacing Modifier Letters, 02B0\u201302FF\n//  - U+02C7  \u02C7 &#711;  Caron\n//  - U+02D8  \u02D8 &#728;  Breve\n//  - U+02D9  \u02D9 &#729;  Dot Above\n//  - U+02DA  \u02DA &#730;  Ring Above\n//  - U+02DB  \u02DB &#731;  Ogonek\n//  - U+02DC  \u02DC &#732;  Small Tilde\n//  - U+02DD  \u02DD &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00\u20131EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, merge, parsePatch, structuredPatch };\n", "\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport const FileHandleMode = Object.freeze({ R:0,\"0\":\"R\",Wn:1,\"1\":\"Wn\",An:2,\"2\":\"An\",RW:3,\"3\":\"RW\",RWn:4,\"4\":\"RWn\",RAn:5,\"5\":\"RAn\", });\n/**\n*/\nexport const FileType = Object.freeze({ Dir:4,\"4\":\"Dir\",Chr:2,\"2\":\"Chr\",Blk:6,\"6\":\"Blk\",Reg:8,\"8\":\"Reg\",FIFO:1,\"1\":\"FIFO\",Lnk:10,\"10\":\"Lnk\",Sock:12,\"12\":\"Sock\", });\n/**\n*/\nexport class FS {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FS.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_fs_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.fs_new();\n        return FS.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} raw\n    * @returns {FS}\n    */\n    static from_raw(raw) {\n        var ptr0 = passArray8ToWasm0(raw, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.fs_from_raw(ptr0, len0);\n        return FS.__wrap(ret);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    to_raw() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.fs_to_raw(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} inode_id\n    * @returns {number}\n    */\n    static inode_get_offset(inode_id) {\n        var ret = wasm.fs_inode_get_offset(inode_id);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} inode_id\n    * @returns {Uint8Array}\n    */\n    inode_to_raw(inode_id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.fs_inode_to_raw(retptr, this.ptr, inode_id);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} inode_id\n    * @returns {INode}\n    */\n    inode_get(inode_id) {\n        var ret = wasm.fs_inode_get(this.ptr, inode_id);\n        return INode.__wrap(ret);\n    }\n    /**\n    * @param {number} uid\n    * @param {number} gid\n    * @returns {FileCreateOk}\n    */\n    file_create(uid, gid) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.fs_file_create(retptr, this.ptr, uid, gid);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return FileCreateOk.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} inode_id\n    * @param {number} mode\n    * @returns {FileHandle}\n    */\n    file_open(inode_id, mode) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.fs_file_open(retptr, this.ptr, inode_id, mode);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return FileHandle.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {FileHandle} fh\n    * @param {Uint8Array} buff\n    */\n    file_write(fh, buff) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(fh, FileHandle);\n            var ptr0 = passArray8ToWasm0(buff, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.fs_file_write(retptr, this.ptr, fh.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {FileHandle} fh\n    * @returns {Uint8Array}\n    */\n    file_read(fh) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(fh, FileHandle);\n            wasm.fs_file_read(retptr, this.ptr, fh.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {FileHandle} fh\n    */\n    file_close(fh) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(fh, FileHandle);\n            var ptr0 = fh.ptr;\n            fh.ptr = 0;\n            wasm.fs_file_close(retptr, this.ptr, ptr0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} id\n    * @returns {boolean}\n    */\n    bmap_get(id) {\n        var ret = wasm.fs_bmap_get(this.ptr, id);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} id\n    */\n    bmap_set_used(id) {\n        wasm.fs_bmap_set_used(this.ptr, id);\n    }\n    /**\n    * @param {number} id\n    */\n    bmap_set_unused(id) {\n        wasm.fs_bmap_set_unused(this.ptr, id);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    bmap_find_unused() {\n        var ret = wasm.fs_bmap_find_unused(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    * @param {number} id\n    * @returns {boolean}\n    */\n    imap_get(id) {\n        var ret = wasm.fs_imap_get(this.ptr, id);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} id\n    */\n    imap_set_used(id) {\n        wasm.fs_imap_set_used(this.ptr, id);\n    }\n    /**\n    * @param {number} id\n    */\n    imap_set_unused(id) {\n        wasm.fs_imap_set_unused(this.ptr, id);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    imap_find_unused() {\n        var ret = wasm.fs_imap_find_unused(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n}\n/**\n*/\nexport class FileCreateOk {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FileCreateOk.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_filecreateok_free(ptr);\n    }\n    /**\n    */\n    get inode() {\n        var ret = wasm.__wbg_get_filecreateok_inode(this.ptr);\n        return INode.__wrap(ret);\n    }\n    /**\n    * @param {INode} arg0\n    */\n    set inode(arg0) {\n        _assertClass(arg0, INode);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_filecreateok_inode(this.ptr, ptr0);\n    }\n    /**\n    */\n    get inode_id() {\n        var ret = wasm.__wbg_get_filecreateok_inode_id(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set inode_id(arg0) {\n        wasm.__wbg_set_filecreateok_inode_id(this.ptr, arg0);\n    }\n    /**\n    */\n    get block_id() {\n        var ret = wasm.__wbg_get_filecreateok_block_id(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set block_id(arg0) {\n        wasm.__wbg_set_filecreateok_block_id(this.ptr, arg0);\n    }\n}\n/**\n*/\nexport class FileHandle {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FileHandle.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_filehandle_free(ptr);\n    }\n    /**\n    */\n    get mode() {\n        var ret = wasm.__wbg_get_filehandle_mode(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set mode(arg0) {\n        wasm.__wbg_set_filehandle_mode(this.ptr, arg0);\n    }\n    /**\n    */\n    get inode_id() {\n        var ret = wasm.__wbg_get_filehandle_inode_id(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set inode_id(arg0) {\n        wasm.__wbg_set_filehandle_inode_id(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr_now() {\n        var ret = wasm.__wbg_get_filehandle_ptr_now(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr_now(arg0) {\n        wasm.__wbg_set_filehandle_ptr_now(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr_addr() {\n        var ret = wasm.__wbg_get_filehandle_ptr_addr(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr_addr(arg0) {\n        wasm.__wbg_set_filehandle_ptr_addr(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr_id() {\n        var ret = wasm.__wbg_get_filehandle_ptr_id(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr_id(arg0) {\n        wasm.__wbg_set_filehandle_ptr_id(this.ptr, arg0);\n    }\n    /**\n    */\n    get i_block() {\n        var ret = wasm.__wbg_get_filehandle_i_block(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set i_block(arg0) {\n        wasm.__wbg_set_filehandle_i_block(this.ptr, arg0);\n    }\n    /**\n    * @param {boolean} crlf\n    * @returns {string}\n    */\n    to_string(crlf) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.filehandle_to_string(retptr, this.ptr, crlf);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class INode {\n\n    static __wrap(ptr) {\n        const obj = Object.create(INode.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_inode_free(ptr);\n    }\n    /**\n    */\n    get mode() {\n        var ret = wasm.__wbg_get_inode_mode(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set mode(arg0) {\n        wasm.__wbg_set_inode_mode(this.ptr, arg0);\n    }\n    /**\n    */\n    get size() {\n        var ret = wasm.__wbg_get_inode_size(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set size(arg0) {\n        wasm.__wbg_set_inode_size(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr1() {\n        var ret = wasm.__wbg_get_inode_ptr1(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr1(arg0) {\n        wasm.__wbg_set_inode_ptr1(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr2() {\n        var ret = wasm.__wbg_get_inode_ptr2(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr2(arg0) {\n        wasm.__wbg_set_inode_ptr2(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr3() {\n        var ret = wasm.__wbg_get_inode_ptr3(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr3(arg0) {\n        wasm.__wbg_set_inode_ptr3(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr4() {\n        var ret = wasm.__wbg_get_inode_ptr4(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr4(arg0) {\n        wasm.__wbg_set_inode_ptr4(this.ptr, arg0);\n    }\n    /**\n    */\n    get ptr5() {\n        var ret = wasm.__wbg_get_inode_ptr5(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ptr5(arg0) {\n        wasm.__wbg_set_inode_ptr5(this.ptr, arg0);\n    }\n    /**\n    */\n    get uid() {\n        var ret = wasm.__wbg_get_inode_uid(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set uid(arg0) {\n        wasm.__wbg_set_inode_uid(this.ptr, arg0);\n    }\n    /**\n    */\n    get gid() {\n        var ret = wasm.__wbg_get_inode_gid(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gid(arg0) {\n        wasm.__wbg_set_inode_gid(this.ptr, arg0);\n    }\n    /**\n    */\n    get atime() {\n        var ret = wasm.__wbg_get_inode_atime(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set atime(arg0) {\n        wasm.__wbg_set_inode_atime(this.ptr, arg0);\n    }\n    /**\n    */\n    get mtime() {\n        var ret = wasm.__wbg_get_inode_mtime(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set mtime(arg0) {\n        wasm.__wbg_set_inode_mtime(this.ptr, arg0);\n    }\n    /**\n    */\n    get ctime() {\n        var ret = wasm.__wbg_get_inode_ctime(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ctime(arg0) {\n        wasm.__wbg_set_inode_ctime(this.ptr, arg0);\n    }\n    /**\n    * @param {boolean} crlf\n    * @returns {string}\n    */\n    to_string(crlf) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.inode_to_string(retptr, this.ptr, crlf);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('ext0_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_now_b5215ffee26d321b = typeof Date.now == 'function' ? Date.now : notDefined('Date.now');\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_693216e109162396 = function() {\n        var ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_09919627ac0992f5 = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n", "globalThis.sto = JSON.parse(localStorage.SudoerOfMyself ?? \"{}\")\n\nsto.__save = () => new Promise((res, rej) => {\n\tlocalStorage.SudoerOfMyself = JSON.stringify(sto)\n\n\tif (sto.__idb instanceof IDBDatabase && ext0.fs) {\n\t\tconst putReq = sto.__idb.transaction(\"fs\", \"readwrite\").objectStore(\"fs\").put({\n\t\t\tid: 1,\n\t\t\traw: ext0.fs.to_raw()\n\t\t})\n\t\tputReq.onsuccess = () => {\n\t\t\tconsole.log(\"EFS: saved fs to indexedDB\")\n\t\t\tres()\n\t\t}\n\t\tputReq.onerror = rej\n\t}\n})\n\nsto.env ??= {}\nsto.bag ??= {}\n\ninitQ.push(() => new Promise((res, rej) => {\n\tconst openReq = indexedDB.open(\"SudoerOfMyself\", 1)\n\topenReq.onerror = rej\n\topenReq.onupgradeneeded = evt => {\n\t\tconst idb = evt.target.result\n\t\tif (! idb.objectStoreNames.contains(\"fs\")) {\n\t\t\tidb.createObjectStore(\"fs\", { keyPath: \"id\" })\n\t\t}\n\t}\n\topenReq.onsuccess = evt => {\n\t\tconst idb = sto.__idb = evt.target.result\n\t\tconst getReq = idb.transaction(\"fs\", \"readonly\").objectStore(\"fs\").get(1)\n\t\tgetReq.onsuccess = evt => {\n\t\t\tconst fsRes = evt.target.result\n\t\t\tif (fsRes?.raw) {\n\t\t\t\text0.fs = ext0.FS.from_raw(fsRes.raw)\n\t\t\t\tconsole.log(\"EFS: loaded fs from indexedDB\")\n\t\t\t}\n\t\t\telse {\n\t\t\t\text0.fs = new ext0.FS()\n\t\t\t\tconsole.log(\"EFS: created new fs\")\n\t\t\t\tidb.transaction(\"fs\", \"readwrite\").objectStore(\"fs\").add({\n\t\t\t\t\tid: 1,\n\t\t\t\t\traw: ext0.fs.to_raw()\n\t\t\t\t})\n\t\t\t}\n\t\t\tres()\n\t\t}\n\t\tgetReq.onerror = rej\n\t}\n}))\n\naddEventListener(\"beforeunload\", sto.__save)\n\ninitQ.push(async () => {\n\tif (! sto.version || cmpSemVer(pack.version, sto.version) > 0) {\n\t\tsto.version = pack.version\n\t\tterm.writeln(`SudoerOfMyself updated:`)\n\t\tawait cmds.version()\n\t}\n})\n", "Function.prototype.constructor = null\nObject.getPrototypeOf(async () => {}).constructor = null\nObject.getPrototypeOf(function *() {}).constructor = null\nObject.getPrototypeOf(async function *() {}).constructor = null\n\nconst safeCallback = f => (cb, ...arg) => {\n\tif (typeof cb !== \"function\") throw new TypeError(\"Callback should be a function.\")\n\treturn f(cb, ...arg)\n}\nconst safeTimeout = safeCallback(setTimeout)\nconst safeInterval = safeCallback(setInterval)\n\nglobalThis.Sandbox = class {\n\tconstructor(env) {\n\t\tenv.export = v => this.exports = v\n\t\tObject.assign(env, {\n\t\t\tObject, Array, Math, String, Number, Symbol, Promise,\n\t\t\tsetTimeout: safeTimeout, setInterval: safeInterval, clearTimeout, clearInterval,\n\t\t\tenv\n\t\t})\n\t\tthis.safeEnv = new Proxy(env, {\n\t\t\thas: () => true,\n\t\t\tget: (tar, k) => {\n\t\t\t\tif (k === Symbol.unscopables) return undefined\n\t\t\t\treturn tar[k]\n\t\t\t},\n\t\t\tset: (_, k, v) => {\n\t\t\t\tif (k === \"exports\") this.exports = v\n\t\t\t}\n\t\t})\n\t}\n\n\trun(code) {\n\t\tif (code.includes(\"import\")) throw new SyntaxError(\"Sandbox eval mustn't import.\")\n\t\tconst env = this.safeEnv\n\t\tnew Function(\"env\", `\n\t\t\twith (env) {\n\t\t\t\t(function () {\n\t\t\t\t\t\"use strict\";\n\t\t\t\t\t${code};\n\t\t\t\t})()\n\t\t\t}`\n\t\t)(env)\n\t\treturn this.exports\n\t}\n}\n", "const escs = {\n\t\"n\": \"\\n\",\n\t\"r\": \"\\r\",\n\t\"t\": \"\\t\",\n\t\"a\": \"\\u0007\",\n\t\"e\": \"\\u001B\"\n}\n\nconst white = /[ \\t]/\nconst d8 = /[0-7]/\nconst d10 = /\\d/\nconst d16 = /[\\da-fA-F]/\nconst alpha = /[a-zA-Z]/\nconst ident = /[a-zA-Z_]/\nconst identd = /[a-zA-Z_\\d]/\n\nglobalThis.shell = ln => {\n\tconst f = {\n\t\tesc: false,\n\t\tcesc: false,\n\t\tsq: false,\n\t\tdq: false,\n\t\tvar: false,\n\t\twh: true,\n\t}\n\tconst e = () => {\n\t\tnow += String.fromCharCode(parseInt(enow, f.cesc === \"o\" ? 8 : 16))\n\t\tf.cesc = false\n\t\tenow = \"\"\n\t}\n\n\tconst tokens = []\n\tlet now = \"\", enow = \"\", vnow = \"\"\n\tfor (const ch of ln.trimStart() + \"\\0\") {\n\t\tif (f.esc) {\n\t\t\tif (ch === \"x\" || ch === \"u\" || ch === \"0\") f.cesc = ch === \"0\" ? \"o\" : ch\n\t\t\telse now += escs[ch] ?? ch\n\t\t\tf.esc = false\n\t\t\tcontinue\n\t\t}\n\t\tif (white.test(ch) && ! f.sq && ! f.dq) {\n\t\t\tif (f.wh) continue\n\t\t\ttokens.push(now)\n\t\t\tnow = \"\"\n\t\t\tf.wh = true\n\t\t\tcontinue\n\t\t}\n\t\telse f.wh = false\n\t\tif (f.cesc) {\n\t\t\tif (enow.length < (f.cesc === \"u\" ? 4 : 2)) {\n\t\t\t\tif ((f.cesc === \"o\" ? d8 : d16).test(ch)) {\n\t\t\t\t\tenow += ch\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\telse if (f.cesc === \"o\") e()\n\t\t\t\telse {\n\t\t\t\t\tnow += f.cesc + enow\n\t\t\t\t\tf.cesc = false\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t}\n\t\t\telse e()\n\t\t}\n\t\telse if (f.var) {\n\t\t\tif (! vnow.length && ! ident.test(ch) || vnow.length && ! identd.test(ch)) {\n\t\t\t\tnow += sto.env[vnow] ?? \"\"\n\t\t\t\tf.var = false\n\t\t\t\tvnow = \"\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvnow += ch\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\tif (ch === \"\\\\\") f.esc = true\n\t\telse if (ch === \"'\" && ! f.dq) f.sq = ! f.sq\n\t\telse if (ch === `\"` && ! f.sq) f.dq = ! f.dq\n\t\telse if (! f.dq && ! f.sq && ch === \"~\")  now += \"/home\"\n\t\telse if (! f.sq && ch === \"$\") f.var = true\n\t\telse now += ch\n\t}\n\tif (now) tokens.push(now.slice(0, -1))\n\n\treturn [ tokens, f ]\n}\n", "term.getCompletions = ln => {\n\tconst [ tokens, flag ] = shell(ln)\n\tif (tokens.length === 1) { // Complete command name.\n\t\tconst [ base, now ] = tokens[0].split(/\\/(?!.*\\/)/)\n\t\tconst [, f] = fs.relpath(base, { err: false, ty: \"dir\" })\n\t\tif (! f) return null\n\n\t\treturn Object.assign(\n\t\t\tObject.entries(f.children).filter(([n]) => (\n\t\t\t\t(! now || n.startsWith(now)) &&\n\t\t\t\t(n[0] !== \".\" || now[0] === \".\")\n\t\t\t)).map(([ n, { ty } ]) => ({\n\t\t\t\traw: n + (ty === \"dir\" ? \"/\" : \"\"),\n\t\t\t\tdisp: fs.ls.raw({ n, ty }, true, true)\n\t\t\t})),\n\t\t\t{ root: now, flag },\n\t\t)\n\t}\n}\n\nterm.clearCompletions = async (old = false) => {\n\tconst c = old ? term.oldCompletion : term.completion\n\tif (! c) return\n\tdelete term.completion\n\n\tconst cursor = term.getCursor()\n\tawait term.writeA((\n\t\t\"\\r\\n\" + \" \".repeat(c.colNum * c.maxWidth + (c.colNum - 1) * c.colPadding)\n\t).repeat(c.rowNum))\n\tterm.setCursor(cursor)\n}\n\nterm.drawCompletions = async coms => {\n\tconst maxWidth = coms.reduce((a, c) => Math.max(a, c[2] = stringWidth(c.disp)), 0)\n\tconst colPadding = 3\n\tconst colNum = (term.options.cols + colPadding) / (maxWidth + colPadding) | 0\n\tconst cursor = term.getCursor()\n\n\tlet out = \"\", rowNum = 0\n\tfor (const [ i, com ] of coms.entries()) {\n\t\tout += (i % colNum\n\t\t\t? \" \".repeat(maxWidth - coms[i - 1][2] + colPadding)\n\t\t\t: (++ rowNum, \"\\r\\n\")\n\t\t) + com.disp\n\t}\n\tawait term.writeA(out)\n\tterm.setCursor(cursor)\n\n\tterm.completion = {\n\t\tlist: coms,\n\t\tcursor,\n\t\tcolNum,\n\t\trowNum,\n\t\tmaxWidth,\n\t\tcolPadding,\n\t\ti: -1\n\t}\n}\n\nterm.useComplete = async s => {\n\tawait term.writeA(s)\n\tterm.ln += s\n\tconsole.log(s)\n\tterm.cursorIndex += s.length\n}\n\nterm.tabComplete = async () => {\n\tconst c = term.completion\n\tif (c) {\n\t\tconst getCompletionPos = i => {\n\t\t\tconst x = (i % c.colNum) * (c.maxWidth + c.colPadding)\n\t\t\tconst y = c.cursor[1] + (i / c.colNum | 0) + 1\n\t\t\treturn [ x, y ]\n\t\t}\n\n\t\tif (c.i >= 0) {\n\t\t\tterm.setCursor(getCompletionPos(c.i))\n\t\t\tawait term.writeA(c.list[c.i].disp)\n\t\t\tterm.setCursor(c.cursor)\n\t\t\tawait term.writeA(\" \".repeat(c.maxWidth))\n\t\t\tterm.ln = c.ln\n\t\t\tterm.cursorIndex -= c.list[c.i].raw.length - c.commonPrefix.length\n\t\t}\n\n\t\tif (++ c.i === c.list.length) c.i = 0\n\t\tterm.setCursor(getCompletionPos(c.i))\n\t\tawait term.writeA(chalk.inverse(c.list[c.i].disp))\n\t\tterm.setCursor(c.cursor)\n\t\tawait term.useComplete(c.list[c.i].raw.slice(c.commonPrefix.length))\n\n\t\treturn\n\t}\n\n\tif (term.oldCompletion) {\n\t\tawait term.clearCompletions(true)\n\t\tdelete term.oldCompletion\n\t}\n\n\tconst ln = term.ln\n\tconst coms = term.getCompletions(ln)\n\n\tif (! coms?.length) return term._core.bell()\n\n\tlet commonPrefix\n\tif (coms.length === 1) commonPrefix = coms[0].raw\n\telse {\n\t\tcommonPrefix = \"\"\n\t\tconst l = coms.length\n\t\tfor (let i = 0; ; i ++) {\n\t\t\tlet ch = coms[0].raw[i], j = 1\n\t\t\tfor (; j < l; j ++) if (coms[j].raw[i] !== ch) break\n\t\t\tif (j < l) break\n\t\t\tcommonPrefix += ch\n\t\t}\n\t}\n\t// now.startsWith(commonPrefix) !\n\n\tif (coms.length > 1) {\n\t\tawait term.drawCompletions(coms)\n\t\tterm.completion.ln ??= ln\n\t\tterm.completion.commonPrefix = commonPrefix\n\t}\n\n\tawait term.useComplete(commonPrefix.slice(coms.root?.length))\n}\n", "for (const k in sto.env) {\n\tif (k.startsWith(\"XTERM_\")) term.setOption(k.slice(6), sto.env[k])\n}\n\nterm.writeA = s => new Promise(res => term.write(s ?? \"\", res))\nterm.writlnA = s => new Promise(res => term.writeln(s ?? \"\", res))\n\nsto.env.PROMPT ??= chalk.green(\"'\\\\$ '\")\nterm.writePrompt = async () => await term.writeA(shell(sto.env.PROMPT)[0][0])\n\nterm.delete = (c, go, back) =>\n\tterm.write((go ? \"\\b\".repeat(c) : \"\") + (back ? \" \".repeat(c) + \"\\b\".repeat(c) : \"\"))\n\nterm.formatErr = err => chalk.yellow(err.message ?? err)\n\nsto.history ??= []\nterm.historyLn = () => {\n\tterm.write(\"\\r\")\n\tterm.writePrompt()\n\tterm.delete(stringWidth(term.ln), false, true)\n\tterm.write(\n\t\tterm.ln = (term.historyIndex ? sto.history.at(- term.historyIndex) : \"\")\n\t)\n\tterm.cursorIndex = term.ln.length\n}\nObject.defineProperties(term, {\n\tlnPre: {\n\t\tget: () => term.ln.slice(0, term.cursorIndex)\n\t},\n\tlnPost: {\n\t\tget: () => term.ln.slice(term.cursorIndex)\n\t},\n\tlnPostN: {\n\t\tget: () => term.ln.slice(term.cursorIndex + 1)\n\t},\n\tlnCur: {\n\t\tget: () => term.ln[term.cursorIndex - 1]\n\t},\n\tlnCurN: {\n\t\tget: () => term.ln[term.cursorIndex]\n\t}\n})\n\nterm.getCursor = () => [ term._core.buffer.x, term._core.buffer.y ]\nterm.setCursor = ([ x, y ]) => {\n\tterm._core._inputHandler._setCursor(x, y)\n}\n\nterm.readln = async once => {\n\tterm.historyIndex = 0\n\tterm.cursorIndex = 0\n\tterm.ln = \"\"\n\tif (once) term.enableRead = true\n\tawait new Promise(res => term.lnComplete = res)\n\tif (once) term.enableRead = false\n\tdelete term.lnComplete\n\treturn term.ln\n}\n\nterm.yesno = async dft => {\n\tterm.write(chalk.magentaBright(dft ? \"(Y/n) \" : \"(y/N) \"))\n\tconst ln = (await term.readln(true)).toLowerCase()\n\tif (ln === \"y\" || ln === \"yes\") return true\n\tif (ln === \"n\" || ln === \"no\") return false\n\tif (ln === \"\") return dft\n\treturn null\n}\n\nterm.tryFastForward = async () => {\n\tif (perm.find(\"ff\")) {\n\t\tterm.fastForward = true\n\t\tawait term.statusBar.add(\"ff\", \"\u23F0 \")\n\t}\n}\n\nterm.onData(async key => {\n\tswitch (key[0]) {\n\t\tcase \"\\u007F\": // Backspace\n\t\t\tif (! term.enableRead) return\n\t\t\tif (term.completion) {\n\t\t\t\tif (term.completion.i >= 0) {\n\t\t\t\t\tawait term.clearCompletions()\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tterm.oldCompletion = term.completion\n\t\t\t\t\tdelete term.completion\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (term.cursorIndex > 0) {\n\t\t\t\tconst i = stringWidth(term.lnCur)\n\t\t\t\tterm.delete(i, true, false)\n\t\t\t\tterm.cursorIndex --\n\t\t\t\tterm.ln = term.lnPre + term.lnPostN\n\t\t\t\tterm.write(term.lnPost + \" \".repeat(i))\n\t\t\t\tterm.delete(stringWidth(term.lnPost) + i, true, false)\n\t\t\t}\n\t\t\tbreak\n\t\tcase \"\\r\": // Enter\n\t\t\tif (! term.enableRead) return\n\t\t\tif (term.completion) await term.clearCompletions()\n\n\t\t\tterm.writeln(\"\")\n\t\t\tterm.lnComplete()\n\t\t\tbreak\n\t\tcase \"\\t\": // Tab\n\t\t\tif (! term.enableRead || term.isCommand) return\n\t\t\tawait term.tabComplete()\n\t\t\tbreak\n\t\tcase \"\\u000C\": // Ctrl-L\n\t\t\tif (! term.enableRead) return\n\t\t\tterm.clear()\n\t\t\tawait term.statusBar.draw();\n\t\t\tif (term.completion) {\n\t\t\t\tterm.completion.cursor = term.getCursor()\n\t\t\t}\n\t\t\tbreak\n\t\tcase \"\\u0001\": // Ctrl-A\n\t\t\tif (term.completion?.i >= 0) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tterm.write(\"\\u001B[D\".repeat(stringWidth(term.lnPre)))\n\t\t\tterm.cursorIndex = 0\n\t\t\tterm.clearCompletions()\n\t\t\tbreak\n\t\tcase \"\\u0005\": // Ctrl-E\n\t\t\tif (term.completion?.i >= 0) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tterm.write(\"\\u001B[C\".repeat(stringWidth(term.lnPost)))\n\t\t\tterm.cursorIndex = term.ln.length\n\t\t\tbreak\n\t\tcase \"\\u0003\": { // Ctrl-C\n\t\t\tif (term.completion?.i >= 0) {\n\t\t\t\tawait term.clearCompletions()\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (! term.isCommand) return\n\t\t\tconst abort = abortQ.pop()\n\t\t\tif (abort) {\n\t\t\t\tabort()\n\t\t\t\tterm.write(chalk.magentaBright(\"^C\"))\n\t\t\t}\n\t\t\tterm.clearCompletions()\n\t\t\tbreak\n\t\t}\n\t\tcase \"\\u001A\": // Ctrl-Z\n\t\t\tawait term.tryFastForward()\n\t\t\tbreak\n\t\tcase \"\\u001B\": // CSI\n\t\t\tswitch (key.slice(1)) {\n\t\t\t\tcase \"[A\":\n\t\t\t\t\tif (! term.enableRead || ! term.isLoop) return\n\t\t\t\t\tif (term.historyIndex < sto.history.length) {\n\t\t\t\t\t\tterm.historyIndex ++\n\t\t\t\t\t\tterm.historyLn()\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase \"[B\":\n\t\t\t\t\tif (! term.enableRead || ! term.isLoop) return\n\t\t\t\t\tif (term.historyIndex > 0) {\n\t\t\t\t\t\tterm.historyIndex --\n\t\t\t\t\t\tterm.historyLn()\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase \"[D\":\n\t\t\t\t\tif (! term.enableRead) return\n\t\t\t\t\tif (term.completion?.i >= 0) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (term.cursorIndex > 0) {\n\t\t\t\t\t\tterm.write(key.repeat(stringWidth(term.lnCur)))\n\t\t\t\t\t\tterm.cursorIndex --\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase \"[C\":\n\t\t\t\t\tif (! term.enableRead) return\n\t\t\t\t\tif (term.completion?.i >= 0) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (term.cursorIndex < term.ln.length) {\n\t\t\t\t\t\tterm.write(key.repeat(stringWidth(term.lnCurN)))\n\t\t\t\t\t\tterm.cursorIndex ++\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase \"\":\n\t\t\t\t\tterm.blur()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Key ESC: %s\", key.slice(1))\n\t\t\t\t\treturn\n\t\t\t}\n\t\t\tterm.clearCompletions()\n\t\t\tbreak\n\t\tdefault:\n\t\t\tif (key < \"\\u0020\" || (key > \"\\u007E\" && key < \"\\u00A0\")) {\n\t\t\t\tconsole.log(\"Key code: %d\", key.charCodeAt())\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (! term.enableRead) return\n\n\t\t\tif (term.completion) {\n\t\t\t\tterm.oldCompletion = term.completion\n\t\t\t\tdelete term.completion\n\t\t\t}\n\t\t\tawait term.writeA(key + term.lnPost)\n\t\t\tawait term.writeA(\"\\b\".repeat(stringWidth(term.lnPost)))\n\t\t\tterm.ln = term.lnPre + key + term.lnPost\n\t\t\tterm.cursorIndex += key.length\n\t}\n})\n\nterm.onBell(async () => {\n\tawait term.statusBar.add(\"bell\", term.getOption(\"bellStyle\") === \"sound\" ? \"\uD83D\uDD14 \" : \"\uD83D\uDD15 \")\n\tawait sleep(1000)\n\tawait term.statusBar.remove(\"bell\")\n})\n\nterm.listeners = {}\nterm.listen = (evt, fn) => {\n\tconst ls = term.listeners[evt] ??= []\n\tls.push(fn)\n\treturn { dispose: () => ls.splice(ls.findIndex(f => f === fn), 1) }\n}\nterm.listenOnce = (evt, fn) => {\n\tconst { dispose } = term.listen(evt, async (...arg) => {\n\t\tif (await fn(...arg)) dispose()\n\t})\n\treturn { dispose }\n}\nterm.trigger = async (evt, ...arg) => {\n\tconsole.log(\"Trigger: %s, arg:\\n%o\", evt, arg)\n\tfor (const fn of term.listeners[evt] ?? []) await fn(...arg)\n}\n", "if (__mobile) {\n\tlet tid = null\n\tterm.element.addEventListener(\"touchstart\", () => {\n\t\ttid = setTimeout(async () => {\n\t\t\ttid = null\n\t\t\tawait term.tryFastForward()\n\t\t}, 700)\n\t})\n\n\tconst cancel = () => clearTimeout(tid)\n\tterm.element.addEventListener(\"touchend\", cancel)\n\tterm.element.addEventListener(\"touchmove\", cancel)\n}\n", "term.statusBar = {\n\tstatus: [ [ \"device\", __mobile ? \"\uD83D\uDCF1 \" : \"\uD83D\uDCBB \" ] ],\n\tlastWidth: 0,\n\tdraw: async () => {\n\t\tconst sb = term.statusBar\n\t\tconst cursor = term.getCursor()\n\t\tconst s = \" \" + sb.status.map(s => s[1]).join(\"\") + \" \"\n\n\t\tconst width = stringWidth(s)\n\t\tterm.setCursor([ term.getOption(\"cols\") - sb.lastWidth, 0 ])\n\t\tawait term.writeA(\" \".repeat(sb.lastWidth))\n\t\tterm.setCursor([ term.getOption(\"cols\") - width, 0 ])\n\t\tsb.lastWidth = width\n\n\t\tawait term.writeA(chalk.whiteBright.bgMagenta(s))\n\t\tterm.setCursor(cursor)\n\t},\n\tadd: async (name, display) => {\n\t\tconst sb = term.statusBar\n\t\tif (! sb.status.find(s => s[0] === name)) sb.status.unshift([ name, display ])\n\t\tawait sb.draw()\n\t},\n\tremove: async name => {\n\t\tconst sb = term.statusBar\n\t\tconst index = sb.status.findIndex(s => s[0] === name)\n\t\tif (index >= 0) {\n\t\t\tsb.status.splice(index, 1)\n\t\t\tawait sb.draw()\n\t\t}\n\t}\n}\n", "sto.perms ??= {}\nconst able = flag => (...names) => {\n\tconst { perms } = sto\n\tnames.forEach(n => perms[n] = flag)\n\tsto.perms = perms\n}\nglobalThis.perm = {\n\tenable: able(true),\n\tdisable: able(false),\n\tfind: cmdn => sto.perms[cmdn]\n}\n", "if (! Array.isArray(sto.cwd)) sto.cwd = []\n\nconst usrs = sto.usrs ??= {\n\troot: 0,\n\tmyself: 1\n}\nconst grps = sto.grps ??= {\n\troot: [ 0, [ 0 ] ],\n\thuman: [ 1, [ 1 ] ]\n}\n\nglobalThis.fs = {\n\tls: {\n\t\tcolors: {\n\t\t\tdir: \"cyan\",\n\t\t\texe: \"green\",\n\t\t\tblk: \"yellow\",\n\t\t\tchr: \"yellow\",\n\t\t\tnor: \"white\"\n\t\t},\n\t\tindicators: {\n\t\t\tdir: \"/\",\n\t\t\texe: \"*\",\n\t\t\tblk: \"#\",\n\t\t\tchr: \"%\",\n\t\t\tnor: \"\",\n\t\t\tpip: \"|\",\n\t\t\tsoc: \"=\"\n\t\t},\n\t\tshortTypes: {\n\t\t\tdir: \"d\",\n\t\t\texe: \"-\",\n\t\t\tblk: \"b\",\n\t\t\tchr: \"c\",\n\t\t\tnor: \"-\",\n\t\t\tpip: \"p\",\n\t\t\tsoc: \"s\"\n\t\t},\n\t\tlongTypes: {\n\t\t\tdir: \"directory\",\n\t\t\texe: \"executable\",\n\t\t\tblk: \"block device\",\n\t\t\tchr: \"character device\",\n\t\t\tnor: \"file\",\n\t\t\tpip: \"FIFO\",\n\t\t\tsoc: \"socket\"\n\t\t},\n\t\traw: ({ n, ty }, c, F) => {\n\t\t\tif (c) n = chalk[fs.ls.colors[ty]]?.(n) ?? n\n\t\t\tif (F) n += fs.ls.indicators[ty] ?? \"?\"\n\t\t\treturn n\n\t\t}\n\t},\n\t\n\td: dir => (\n\t\tdir.reduce((a, c) => a.children[c], sto.files)\n\t),\n\tsame: (d1, d2) => (\n\t\td1.every((n, i) => n === d2[i])\n\t),\n\tcwd: () => (\n\t\tfs.d(sto.cwd)\n\t),\n\trelpath: (path, { err, ty, perm }) => {\n\t\tconst base = path?.startsWith(\"/\") ? [] : [].concat(sto.cwd)\n\t\tconst slashEnd = path?.endsWith(\"/\")\n\t\tconst after = path ? path.split(\"/\").filter(f => f) : []\n\t\tlet k, c, f = fs.d(base)\n\t\ttry {\n\t\t\tfor ([ k, c ] of after.entries()) {\n\t\t\t\tif (c === \".\") ;\n\t\t\t\telse if (c === \"..\") {\n\t\t\t\t\tbase.pop()\n\t\t\t\t\tf = fs.d(base)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = f.children[c]\n\t\t\t\t\tif (! f) {\n\t\t\t\t\t\tthrow \"no such file or directory\"\n\t\t\t\t\t}\n\t\t\t\t\tif (f.ty !== \"dir\" && (k !== after.length - 1 || slashEnd)) {\n\t\t\t\t\t\tthrow \"not a directory\"\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tk !== after.length - 1 && ! fs.hasPerm(\"x\", f) ||\n\t\t\t\t\t\tk === after.length - 1 && perm && ! fs.hasPerm(perm, f)\n\t\t\t\t\t) throw \"permission denied\"\n\t\t\t\t\tbase.push(c)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof ty === \"string\") ty = [ ty ]\n\t\t\tif (Array.isArray(ty) && ! ty.includes(f.ty)) {\n\t\t\t\tc = base.pop() ?? \"\"\n\t\t\t\tthrow \"not a \" + ty.map(t => fs.ls.longTypes[t]).join(\" or \")\n\t\t\t}\n\t\t\treturn [ base, f ]\n\t\t}\n\t\tcatch (errTy) {\n\t\t\tif (err) {\n\t\t\t\tif (slashEnd) after.push(\"\")\n\t\t\t\tterm.writeln([ errTy + \": \", ...base, chalk.red(c), ...after.slice(k + 1) ].join(\"/\"))\n\t\t\t}\n\t\t\treturn [ null, null ]\n\t\t}\n\t},\n\tcwdPretty: () => (\n\t\t(sto.cwd[0] === \"home\"\n\t\t\t? [ \"~\", ...sto.cwd.slice(1) ]\n\t\t\t: [ \"\", ...sto.cwd ]\n\t\t).join(\"/\")\n\t),\n\tupdatePWD: () => {\n\t\tsto.env.PWD = \"/\" + sto.cwd.join(\"/\")\n\t},\n\thasPerm: (ty, { owner, perm }) => {\n\t\tty = \"rwx\".indexOf(ty)\n\t\tlet p = parseInt(perm, 8)\n\t\tif (owner === usrs.myself) {\n\t\t\tp = (p & 0b111 << 6) >> 6\n\t\t}\n\t\t// TODO group perm\n\t\telse {\n\t\t\tp = p & 0b111\n\t\t}\n\t\treturn p & 1 << (2 - ty)\n\t}\n}\n\nfs.updatePWD()\n", "globalThis.humanPages = {\n\t\"\": [\n\t\t\"\u60A8\u9700\u8981\u4EC0\u4E48\u624B\u518C\u9875\uFF1F\",\n\t\t\"\u4F8B\u5982\uFF0C\u5C1D\u8BD5\u4F7F\u7528 `human human`\u3002\"\n\t],\n\tversion: [\n\t\t\"\u663E\u793A SudoerOfMyself \u7684\u7248\u672C\u3002\",\n\t\t\"`version --dependence | -d` \u663E\u793A npm \u4F9D\u8D56\",\n\t\t\"`version --log | -l`        \u663E\u793A git \u65E5\u5FD7\uFF0C\u6765\u6E90 GitHub API\"\n\t],\n\tlogo: [\n\t\t\"\u663E\u793A SudoerOfMyself \u7684\u56FE\u6807\u3002\"\n\t],\n\thuman: [\n\t\t\"\u5177\u6709\u4EBA\u5DE5\u667A\u80FD\u7684\u3001\u7CFB\u7EDF\u53C2\u8003\u624B\u518C\u7684\u63A5\u53E3\u3002\"\n\t],\n\techo: [\n\t\t\"\u663E\u793A\u4E00\u884C\u601D\u60F3\u3002\",\n\t\t\"`echo --angrily | -a`      \u751F\u6C14\u5730\u60F3\",\n\t\t\"`echo --tremulously | -t`  \u53D1\u6296\u5730\u60F3\",\n\t\t\"`echo --seriously | -S`    \u4E25\u8083\u5730\u60F3\",\n\t\t\"`echo --sadly | -s`        \u4F24\u5FC3\u5730\u60F3\"\n\t],\n\tpwd: [\n\t\t\"\u663E\u793A\u51FA\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u7684\u540D\u79F0\u3002\"\n\t],\n\tls: [\n\t\t\"\u5217\u51FA\u76EE\u5F55\u5185\u5BB9\u3002\",\n\t\t\"`-a | --all`      \u5217\u51FA\u6240\u6709\u6587\u4EF6\uFF0C\u5305\u62EC\u4EE5 `.` \u5F00\u5934\u7684\u9690\u542B\u6587\u4EF6\u3002\",\n\t\t\"`-l | --long`     \u9664\u6BCF\u4E2A\u6587\u4EF6\u540D\u5916\uFF0C\u589E\u52A0\u663E\u793A\u6587\u4EF6\u7C7B\u578B\u3001\u6743\u9650\u3001\u6240\u6709\u8005\u540D\u3002\",\n\t\t\"`-c | --color`    \u4F7F\u7528\u989C\u8272\u533A\u522B\u6587\u4EF6\u7C7B\u522B\u3002\",\n\t\t\"`-F | --classify` \u5728\u6BCF\u4E2A\u6587\u4EF6\u540D\u540E\u9644\u4E0A\u4E00\u4E2A\u5B57\u7B26\u4EE5\u8BF4\u660E\u8BE5\u6587\u4EF6\u7684\u7C7B\u578B\u3002\",\n\t\t\"                `*` \u8868\u793A\u666E\u901A\u7684\u53EF\u6267\u884C\u6587\u4EF6\uFF1B`/` \u8868\u793A\u76EE\u5F55\uFF1B`@` \u8868\u793A\u7B26\u53F7\u94FE\u63A5\uFF1B`|` \u8868\u793A\u7BA1\u9053 (FIFO)\uFF1B\",\n\t\t\"                `=` \u8868\u793A\u5957\u63A5\u5B57 (socket) \uFF1B`#` \u8868\u793A\u5757\u8BBE\u5907\uFF1B`%` \u8868\u793A\u5B57\u7B26\u8BBE\u5907\uFF1B\u4EC0\u4E48\u4E5F\u6CA1\u6709\u5219\u8868\u793A\u666E\u901A\u6587\u4EF6\u3002\"\n\t],\n\tcd: [\n\t\t\"\u6539\u53D8\u5F53\u524D\u7684\u5DE5\u4F5C\u76EE\u5F55\u3002\"\n\t],\n\tcat: [\n\t\t\"\u8FDE\u63A5\u6587\u4EF6\u5E76\u5728\u6807\u51C6\u8F93\u51FA\u4E0A\u8F93\u51FA\u3002\",\n\t\t\"`cat --show-all | -A` \u4EE5 16 \u8FDB\u5236\u7801\u7684\u5F62\u5F0F\u663E\u793A\u63A7\u5236\u5B57\u7B26\u3002\"\n\t],\n\tsl: [\n\t\t\"Save/Load\",\n\t\t\"`sl --save | -s`                     \u624B\u52A8\u5B58\u6863\u3002\uFF08\u4E0D\u662F\u5FC5\u8981\u7684\uFF0C\u5173\u95ED\u6807\u7B7E\u9875\u65F6\u4F1A\u81EA\u52A8\u5B58\u6863\uFF09\",\n\t\t\"`sl --auto-save | -a [ second=10 ]`  \u6BCF second \u79D2\u81EA\u52A8\u5B58\u6863\u4E00\u6B21\u3002\",\n\t\t\"`sl --export | -e`                   \u5BFC\u51FA\u5B58\u6863\u4E3A\u4EFB\u4EBA\u6446\u5E03\u7684 JSON\u3002\",\n\t\t\"`sl --export-clip | -E`              \u5BFC\u51FA\u5B58\u6863\u5230\u526A\u8D34\u677F\u3002\",\n\t\t\"`sl --import | -i < JSON >`          \u4ECE JSON \u5BFC\u5165\u5B58\u6863\u3002\",\n\t\t\"`sl --import-clip | -I`              \u4ECE\u526A\u8D34\u677F\u5BFC\u5165\u5B58\u6863\u3002\uFF08\u706B\u72D0\u7B49\u6D4F\u89C8\u5668\u53EF\u80FD\u4E0D\u652F\u6301\uFF09\",\n\t\t\"`sl --locomotive | -l`               \uFF08\u61C2\u7684\u90FD\u61C2\uFF09\",\n\t\t\"`sl --base64 | -b`                   \u4E0E\u5BFC\u5165/\u5BFC\u51FA\u64CD\u4F5C\u8FDE\u7528\uFF0C\u4F7F\u7528 base64 \u7F16\u7801\u3002\"\n\t],\n\tblog: [\n\t\t\"Blog Viewer of OIer Space\",\n\t\t\"`blog --posts | -p <blog>`           \u5217\u51FA\u6240\u6709\u535A\u5BA2\u6587\u7AE0\",\n\t\t\"`blog --category=<category> <blog>`  \u5217\u51FA\u6807\u7B7E\u4E0B\u7684\u535A\u6587\",\n\t\t\"`blog --categories | -c <blog>`      \u5217\u51FA\u6240\u6709\u535A\u5BA2\u6807\u7B7E\",\n\t\t\"`blog <blog> <post>`                 \u67E5\u770B\u535A\u5BA2\u6587\u7AE0\"\n\t],\n\t\"fsts.ext0\": [\n\t\t\"\u6D4B\u8BD5 ext0 \u6587\u4EF6\u7CFB\u7EDF\uFF08\u4FDD\u5B58\u4E8E indexedDB\uFF09\",\n\t\t\"`fsts.ext0 [@preset | str='Hello, ext0!' ]`  \u6D4B\u8BD5\u9884\u8BBE preset \u6216\u5B57\u7B26\u4E32 str\",\n\t\t\"`fsts.ext0 --result-only | -r`               \u53EA\u663E\u793A\u6D4B\u8BD5\u7ED3\u679C\",\n\t\t\"`fsts.ext0 --result-size-only | -R`          \u53EA\u663E\u793A\u6D4B\u8BD5\u7ED3\u679C\u4E2D\u5B57\u7B26\u4E32\u5927\u5C0F\",\n\t\t\"`fsts.ext0 --buff | -b`                      \u4EE5 Uint8Array \u5F62\u5F0F\u663E\u793A\u8BFB\u51FA\u7684\u7F13\u51B2\u533A\",\n\t\t\"`fsts.ext0 --expose | -e`                    \u5C06\u4E34\u65F6\u6587\u4EF6\u7CFB\u7EDF\u5BF9\u8C61\u66B4\u9732\u5230 javascript \u5168\u5C40\",\n\t\t\"`fsts.ext0 --diff | -d`                      \u4EE5 diff \u663E\u793A\u6D4B\u8BD5\u7ED3\u679C\",\n\t\t\"`fsts.ext0 --with-inode | -i`                \u6307\u5B9A\u5B58\u5728\u7684 inode \u5E76\u6D4B\u8BD5\u5176\u6307\u5411\u7684\u6587\u4EF6\u5185\u5BB9\",\n\t\t\"\",\n\t\t\"\u9884\u8BBE\uFF1A\",\n\t\t\"`1b1b`: 1 block + 1 byte \u7528\u4E8E\u6D4B\u8BD5 inode \u4E2D block ptr \u80FD\u5426\u5DE5\u4F5C\",\n\t\t\"`4b1b`: 4 block + 1 byte \u7528\u4E8E\u6D4B\u8BD5 inode \u4E2D block ptr \u6B63\u597D\u7528\u5B8C\u65F6\u80FD\u5426\u6B63\u5E38\u5DE5\u4F5C\",\n\t\t\"`5b1b`: 5 block + 1 byte \u7528\u4E8E\u6D4B\u8BD5 inode \u4E2D block ptr \u7528\u5B8C\u540E\u80FD\u5426\u5F00\u8F9F ptr node\",\n\t\t\"`6b1b`: 6 block + 1 byte \u7528\u4E8E\u6D4B\u8BD5 ptr node \u4E2D\u80FD\u5426\u7EE7\u7EED\u52A0\u5165 block ptr\",\n\t\t\"`cjk`:  \u6D4B\u8BD5\u4E2D\u65E5\u97E9\u5B57\u7B26\u548C emoji\",\n\t\t\"`ansi`: \u6D4B\u8BD5 ANSI \u8F6C\u4E49\"\n\t],\n\tbag: [\n\t\t\"\u4E13\u7528\u4E8E HumanOS \u7684\u8F6F\u4EF6`\u5305`\u7BA1\u7406\u5668\",\n\t\t\"`bag sync`                      \u540C\u6B65\u8F6F\u4EF6\u5305\u5217\u8868\",\n\t\t\"          `--purge | -p`        \u66F4\u65B0 jsDelivr \u8FDC\u7AEF\u7F13\u5B58\",\n\t\t\"`bag add`                       \u6DFB\u52A0\u8F6F\u4EF6\u5305\",\n\t\t\"`bag remove`                    \u5220\u9664\u8F6F\u4EF6\u5305\",\n\t\t\"`bag list`                      \u663E\u793A\u8F6F\u4EF6\u5305\u5217\u8868\"\n\t]\n}\n", "perm.enable(\n\t\"cmds.version\", \"cmds.logo\", \"cmds.sl\", \"cmds.blog\", \"cmds.fsts.ext0\", \"cmds.bag\", \"cmds.opt\",\n\t\"human.version\", \"human.logo\", \"human.sl\", \"human.blog\", \"human.fsts.ext0\", \"human.bag\"\n)\n\nterm.echo = async (s, { t, c } = {}) => {\n\ts = (Array.isArray(s) ? s : [ s ])\n\t\t.map(ln => chalk[c ?? \"yellow\"](`* ${ln}\\r\\n`)).join(\"\")\n\tlet lastCSI = \"\"\n\tfor (let i = 0; i < s.length; i ++) {\n\t\tlet ch = s[i]\n\t\tif (ch === \"\\u001B\") {\n\t\t\twhile (s[i] !== \"m\") ch += s[++ i]\n\t\t\tlastCSI = ch\n\t\t\tch = \"\"\n\t\t}\n\t\tterm.write(lastCSI + ch)\n\t\tawait sleep(term.fastForward ? 5 : t ?? 120)\n\t}\n\tterm.fastForward = false\n\tawait term.statusBar.remove(\"ff\")\n}\n\nglobalThis.cmds = {\n\tversion: async (...argv) => {\n\t\tconst opt = minimist(argv, {\n\t\t\tstopearly: true,\n\t\t\tboolean: [ \"dependence\", \"log\" ],\n\t\t\talias: {\n\t\t\t\td: \"dependence\",\n\t\t\t\tl: \"log\"\n\t\t\t}\n\t\t})\n\t\tterm.writeln(\n\t\t\t`v${ pack.version }, by ${ chalk.yellow(pack.author.split(\" \")[0]) }, on ${ chalk.cyan(__build) },\\r\\n` +\n\t\t\t`at ${ chalk.green(pack.repository.url) }`\n\t\t\t+ (opt.d ? `, with:\\r\\n${\n\t\t\t\t[ \"dependencies\", \"devDependencies\" ].map(g =>\n\t\t\t\t\tchalk.underline(g) + \"\\r\\n\" + Object.entries(pack[g]).map(([ n, v ]) => n + \" \" + chalk.cyan(v)).join(\"\\r\\n\")\n\t\t\t\t).join(\"\\r\\n\")\n\t\t\t}` : \"\")\n\t\t)\n\t\tif (opt.l) {\n\t\t\tconst api = `https://api.github.com/repos/${ pack.repository.url.match(/(\\w+\\/\\w+)(.git)?$/)[1] }/commits`\n\t\t\tawait axios.get(api).then(({ data: commits }) => {\n\t\t\t\tterm.writeln(\"git log from GitHub API:\\r\\n\" + commits.map(({\n\t\t\t\t\tsha,\n\t\t\t\t\tcommit: { author: { name, email, date }, message }\n\t\t\t\t}, i) =>\n\t\t\t\t\t`* ` + chalk.yellow(`commit ${sha}\\r\\n`) + [\n\t\t\t\t\t\t`Author: ${name} <${email}>`,\n\t\t\t\t\t\t`Date:   ${date}`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t...message.split(/\\r\\n|\\r|\\n/).map(ln => \"    \" + ln),\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t].map(ln =>\n\t\t\t\t\t\t(i === commits.length - 1 ? \"  \" : chalk.red(\"| \")) + ln\n\t\t\t\t\t).join(\"\\r\\n\")\n\t\t\t\t).join(\"\\r\\n\"))\n\t\t\t}).catch(err => {\n\t\t\t\tterm.writeln(`version: failed to access GitHub API: ${ term.formatErr(err) }`)\n\t\t\t})\n\t\t}\n\t},\n\n\tlogo: async () => {\n\t\tconst $logo = document.getElementById(\"logo\")\n\t\t$logo.style.display = \"block\"\n\t\tawait sleep(2000)\n\t\t$logo.style.display = \"\"\n\t},\n\n\tsl: async (...argv) => {\n\t\tconst opt = minimist(argv, {\n\t\t\tstopEarly: true,\n\t\t\tboolean: [ \"save\", \"export\", \"export-clip\", \"import\", \"import-clip\", \"locomotive\", \"base64\" ],\n\t\t\talias: {\n\t\t\t\ts: \"save\",\n\t\t\t\ta: \"auto-save\",\n\t\t\t\te: \"export\",\n\t\t\t\tE: \"export-clip\",\n\t\t\t\ti: \"import\",\n\t\t\t\tI: \"import-clip\",\n\t\t\t\tb: \"base64\",\n\t\t\t\tl: \"locomotive\"\n\t\t\t}\n\t\t})\n\n\t\tconst op = opt.s + (\"a\" in opt) + opt.e + opt.E + opt.I + opt.i + opt.l\n\t\tif (op === 0) return term.writeln(\"sl: no operation specified\")\n\t\tif (op > 1) return term.writeln(\"sl: only one operation may be used at a time\")\n\n\t\tif (opt.s) sto.__save()\n\t\tif (\"a\" in opt) {\n\t\t\tif (term.autoSaveTimer) {\n\t\t\t\tclearInterval(term.autoSaveTimer)\n\t\t\t\tterm.writeln(\"sl: old auto-saver killed\")\n\t\t\t}\n\t\t\tif (typeof opt.a === \"number\" && opt.a < 2) return term.writeln(\"sl: auto-save interval is too short\")\n\t\t\tterm.autoSaveTimer = setInterval(async () => {\n\t\t\t\tsto.__save()\n\t\t\t\tterm.statusBar.add(\"auto save\", \"\uD83D\uDCBE \")\n\t\t\t\tawait sleep(700)\n\t\t\t\tterm.statusBar.remove(\"auto save\")\n\t\t\t}, (opt.a === true ? 10 : opt.a) * 1000)\n\t\t}\n\t\tif (opt.e || opt.E) {\n\t\t\tlet s = JSON.stringify(sto)\n\t\t\tif (opt.b) s = Base64.encode(s)\n\t\t\tif (opt.e) term.writeln(chalk.blueBright(s))\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tawait navigator.clipboard.writeText(s)\n\t\t\t\t}\n\t\t\t\tcatch {\n\t\t\t\t\treturn term.writeln(\"sl: failed to access clipboard\")\n\t\t\t\t}\n\t\t\t\tterm.writeln(\"sl: exported to clipboard\")\n\t\t\t}\n\t\t}\n\t\tif (opt.i || opt.I) {\n\t\t\tlet s = opt._.join(\" \")\n\t\t\tif (opt.I) {\n\t\t\t\ttry {\n\t\t\t\t\ts = await navigator.clipboard.readText()\n\t\t\t\t}\n\t\t\t\tcatch {\n\t\t\t\t\treturn term.writeln(\"sl: failed to access clipboard\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (opt.b) s = Base64.decode(s)\n\t\t\ttry {\n\t\t\t\tconst stoN = JSON.parse(s)\n\t\t\t\tfor (const k in sto) {\n\t\t\t\t\tif (! k.startsWith(\"__\")) delete sto[k]\n\t\t\t\t}\n\t\t\t\tfor (const k in stoN) {\n\t\t\t\t\tif (! k.startsWith(\"__\")) sto[k] = stoN[k]\n\t\t\t\t}\n\t\t\t\tif (opt.I) term.writeln(\"sl: imported from clipboard\")\n\t\t\t\thistory.go()\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tterm.writeln(`sl: ${ err.message.slice(12) }`)\n\t\t\t}\n\t\t}\n\t\tif (opt.l) {\n\t\t\tterm.clear()\n\t\t\tterm.write(String.raw`\n\t\t\t                  (@@) (  ) (@)  ( )  @@    ()    @     O     @     O\n             (   )\n         (@@@@)      +-------------------<<\n      (    )         | ${ chalk.green(\"Sudoer Of Myself\") } <<\n                     +-------------------<<\n    (@@@)            |\n     ++      +------ |___                 ____________________ ____________________\n     ||      |+-+ |  |   \\@@@@@@@@@@@     |  ___ ___ ___ ___ | |  ___ ___ ___ ___ |\n   /---------|| | |  |    \\@@@@@@@@@@@@@_ |  |_| |_| |_| |_| | |  |_| |_| |_| |_| |\n  + ========  +-+ |  |                  | |__________________| |__________________|\n _|--/~\\------/~\\-+  |__________________| |__________________| |__________________|\n//// \\O========O/       (O)       (O)        (O)        (O)       (O)        (O)\n\n// There's no money for animation. Sponsor us XD\n`.replaceAll(\"\\n\", \"\\r\\n\")\n\t\t\t)\n\t\t}\n\t},\n\n\thelp: () => term.writeln(\"You are HELPLESS. No one will help you. jaja.\"),\n\n\thuman: async (page = \"\") => {\n\t\tif (perm.find(`human.${page}`))\n\t\t\tawait term.echo(humanPages[page].map(\n\t\t\t\tln => ln.replace(/`(.+?)`/g, s => chalk.underline(s.slice(1, -1)))\n\t\t\t), { t: 0, c: \"cyan\" })\n\t\telse await term.writeln(`human: ${page}: page not found.`)\n\t},\n\n\techo: async (...argv) => {\n\t\tconst opt = minimist(argv, {\n\t\t\tstopEarly: true,\n\t\t\tboolean: [ \"angrily\", \"tremulously\", \"seriously\", \"sadly\" ],\n\t\t\talias: {\n\t\t\t\ta: \"angrily\",\n\t\t\t\tt: \"tremulously\",\n\t\t\t\tS: \"seriously\",\n\t\t\t\ts: \"sadly\"\n\t\t\t}\n\t\t})\n\t\tlet s_ = opt._.join(\" \"), s = s_\n\t\tif (opt.a) s = chalk.bold(s)\n\t\tif (opt.t) s = chalk.italic(s)\n\t\tif (opt.S) s = chalk.underline(s)\n\t\tif (opt.s) s = chalk.dim(s)\n\t\tawait term.echo([ s ], { t: opt.angrily ? 60: undefined })\n\t\tawait term.trigger(\"echo\", s_, opt)\n\t},\n\n\tpwd: () => {\n\t\tterm.writeln(\"/\" + sto.cwd.join(\"/\"))\n\t},\n\n\tls: (...argv) => {\n\t\tconst usrsE = Object.entries(sto.usrs)\n\t\tconst unWidths = []\n\t\tunWidths[-1] = 1\n\t\tconst unWidthMax = usrsE.reduce((a, c) => Math.max(a, unWidths[c[1]] = stringWidth(c[0])), 0)\n\n\t\tconst opt = minimist(argv, {\n\t\t\tboolean: [ \"color\", \"classify\", \"long\", \"all\" ],\n\t\t\talias: {\n\t\t\t\ta: \"all\",\n\t\t\t\tc: \"color\",\n\t\t\t\tF: \"classify\",\n\t\t\t\tl: \"long\"\n\t\t\t}\n\t\t})\n\n\t\tif (! opt._.length) opt._.push(\"\")\n\t\tfor (const path of opt._) {\n\t\t\tif (opt._.length > 1) term.writeln(path + \":\")\n\n\t\t\tconst [, f] = fs.relpath(path, { err: true, perm: \"r\" })\n\t\t\tif (! f) return\n\t\t\t\n\t\t\tlet files = f.ty === \"dir\" ? Object.values(f.children) : [ f ]\n\t\t\tif (! opt.a) files = files.filter(({ n }) => n[0] !== \".\")\n\n\t\t\tconst out = files.map(({ n, ty, perm, owner }) => {\n\t\t\t\tn = fs.ls.raw({ n, ty }, opt.c, opt.F)\n\t\t\t\tif (opt.l) {\n\t\t\t\t\tconst p = [ ...\"rwx\".repeat(3) ], o = parseInt(perm, 8)\n\t\t\t\t\tif (typeof perm === \"number\") {\n\t\t\t\t\t\tfor (let b = 0; b <= 8; b ++) if (! (o & 1 << (8 - b))) p[b] = \"-\"\n\t\t\t\t\t}\n\t\t\t\t\telse p.forEach((_, i) => p[i] = \"?\")\n\t\t\t\t\tconst [ un, uid ] = usrsE.find(([, un]) => un === owner) ?? [ \"?\", -1 ]\n\t\t\t\t\tn = (fs.ls.shortTypes[ty] ?? \"?\") + p.join(\"\") + \" \" + un + \" \".repeat(unWidthMax - unWidths[uid] + 1) + n\n\t\t\t\t}\n\t\t\t\treturn n\n\t\t\t}).join(opt.l ? \"\\r\\n\" : \"  \")\n\t\t\tterm.write(out + (out ? \"\\r\\n\" : \"\"))\n\n\t\t\tif (opt._.length > 1) term.writeln(\"\")\n\t\t}\n\t},\n\n\tcd: path => {\n\t\tconst [d] = fs.relpath(path, { err: true, ty: \"dir\", perm: \"x\" })\n\t\tif (! d) return\n\t\tsto.cwd = d\n\t\tfs.updatePWD()\n\t},\n\n\tcat: async (...argv) => {\n\t\tconst opt = minimist(argv, {\n\t\t\tboolean: [ \"show-all\" ],\n\t\t\talias: {\n\t\t\t\tA: \"show-all\"\n\t\t\t}\n\t\t})\n\n\t\tconst path = opt._.join(\" \")\n\t\tconst [d, f] = fs.relpath(path, { err: true, ty: [ \"nor\", \"exe\" ], perm: \"r\" })\n\t\tif (! f) return\n\n\t\tlet s = f.cont ?? \"\"\n\t\tif (opt.A) s = s.replace(/[\\x00-\\x1F]/g, ch => chalk.magentaBright(`<${ (\"0\" + ch.charCodeAt().toString(16).toUpperCase()).slice(-2) }>`))\n\t\tterm.writeln(s)\n\t\tawait term.trigger(\"cat\", d, f)\n\t},\n\n\t\"fsts.ext0\": (...argv) => {\n\t\tconst opt = minimist(argv, {\n\t\t\tstopearly: true,\n\t\t\tboolean: [ \"result-only\", \"result-size-only\", \"buff\", \"expose\", \"diff\" ],\n\t\t\talias: {\n\t\t\t\tr: \"result-only\",\n\t\t\t\tR: \"result-size-only\",\n\t\t\t\tb: \"buff\",\n\t\t\t\te: \"expose\",\n\t\t\t\td: \"diff\",\n\t\t\t\ti: \"with-inode\"\n\t\t\t}\n\t\t})\n\t\tconst test = opt._.join(\" \")\n\n\t\tconst xb1b = b => Array.from({ length: b }, (_, k) =>\n\t\t\tArray.from({ length: 31 },\n\t\t\t\t(_, i) => (\"000000\" + i).slice(-7)\n\t\t\t).join(\"|\") + \"|\" + (\"000\" + k + \"blk\").slice(-7)\n\t\t).join(\"#\") + \"#$\"\n\n\t\tconst preset = {\n\t\t\t\"1b1b\": xb1b(1),\n\t\t\t\"4b1b\": xb1b(4),\n\t\t\t\"5b1b\": xb1b(5),\n\t\t\t\"6b1b\": xb1b(6),\n\t\t\t\"cjk\": \"\u4F60\u597D\uFF01\u3053\u3093\u306B\u3061\u306F\uFF01\uB155\uD558\uC138\uC694\uFF01\uD83D\uDE00 \",\n\t\t\t\"ansi\": `This is a ${ chalk.green(\"green\") } word.`\n\t\t}\n\n\t\tconst l = {\n\t\t\tsucc: s => term.writeln(\"=> \" + chalk.greenBright(\"test succeeded. \" + s)),\n\t\t\tfail: s => term.writeln(\"=> \" + chalk.red(\"test failed. \" + s)),\n\t\t\tinfo: s => opt.r || opt.R || term.writeln(\"=> \" + s),\n\t\t\tmark: s => term.writeln(\"=> \" + chalk.cyanBright(s))\n\t\t}\n\t\t\n\t\tlet str1\n\t\tif (test[0] === \"@\") {\n\t\t\tstr1 = preset[test.slice(1)]\n\t\t\tif (str1) l.mark(\n\t\t\t\t`test with preset ${ chalk.underline(test) }: <<<\\r\\n${ chalk.cyan(str1) }\\r\\n>>>`\n\t\t\t)\n\t\t\telse return l.fail(\"no such preset\")\n\t\t}\n\t\telse str1 = test || \"hello, ext0!\"\n\n\t\ttry {\n\t\t\tconst efs = ext0.fs\n\n\t\t\tif (opt.e) {\n\t\t\t\tl.mark(\"test fs & fh will be exported to `globalThis.efs_test`, `globalThis.efs_fh{1,2}`\")\n\t\t\t\tglobalThis.efs_test = efs\n\t\t\t}\n\n\t\t\tlet inode_id, block_id, inode\n\t\t\tconsole.log(opt)\n\t\t\tif (\"i\" in opt) {\n\t\t\t\tinode_id = opt.i\n\t\t\t\tif (! efs.imap_get(inode_id)) return l.fail(\"no such inode\")\n\t\t\t\tinode = efs.inode_get()\n\t\t\t\tblock_id = inode.ptr1 - 1024;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t({ inode_id, block_id, inode } = efs.file_create())\n\t\t\t\tl.info(`file_create ok, inode_id: ${inode_id}, block_id: ${block_id}, inode: ${ chalk.cyan(inode.to_string(true)) }`)\n\t\t\t}\n\n\t\t\tconst fh1 = efs.file_open(inode_id, ext0.FileHandleMode.Wn)\n\t\t\tif (opt.e) globalThis.efs_fh1 = fh1\n\t\t\tl.info(`file_open 1 ok, fh: ${ chalk.cyan(fh1.to_string(true)) }`)\n\n\t\t\tif (inode?.size) {\n\t\t\t\tl.info(`file_write jumpped, file with size: ${ inode.size }`)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tefs.file_write(fh1, new TextEncoder(\"utf-8\").encode(str1))\n\t\t\t\tl.info(\"file_write ok\")\n\t\t\t}\n\n\t\t\tconst fh2 = efs.file_open(inode_id, ext0.FileHandleMode.R)\n\t\t\tif (opt.e) globalThis.efs_fh2 = fh2\n\t\t\tl.info(`file_open 2 ok, fh: ${ chalk.cyan(fh1.to_string(true)) }`)\n\n\t\t\tconst buff = efs.file_read(fh2)\n\t\t\tconst str2 = new TextDecoder(\"utf-8\").decode(buff)\n\t\t\tconst cmp = str1 === str2\n\n\t\t\tlet cmp_res = opt.d\n\t\t\t\t? \"diff:\\r\\n\" + Diff.diffChars(str1, str2).reduce((a, { added, removed, value }) => a + (\n\t\t\t\t\tchalk[ added ? \"green\" : removed ? \"red\" : \"white\" ](value)\n\t\t\t\t), \"\")\n\t\t\t\t: str2\n\t\t\tif (! opt.d) {\n\t\t\t\tif (test.match(/^@\\d+b1b$/))\n\t\t\t\t\tcmp_res = cmp_res.replace(/[|#$]/g, ch => chalk.white(ch))\n\t\t\t\tcmp_res = chalk.cyan(cmp_res)\n\t\t\t}\n\n\t\t\tl[cmp ? \"succ\" : \"fail\"](\n\t\t\t\t`file_read ok, read ${cmp ? \"==\" : \"!=\"} write, ` + \n\t\t\t\t(opt.R ? `size: ${buff.length}byte(s)` : `str: <<<\\r\\n${ cmp_res }\\r\\n>>>`) +\n\t\t\t\t(opt.b ? `, buff: [${ chalk.cyan(buff) }]` : \"\")\n\t\t\t)\n\n\t\t\tif (! opt.e) {\n\t\t\t\tefs.file_close(fh1);\n\t\t\t\tefs.file_close(fh2);\n\t\t\t}\n\t\t\tl.info(\"file_close 1,2 ok\")\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(err)\n\t\t\tl.fail(`err: ${ term.formatErr(err) }`)\n\t\t}\n\t},\n\n\tbag: async (cmd, ...argv) => {\n\t\tconst source = \"https://cdn.jsdelivr.net/gh/ForkKILLET/SOMOS@main/baglist.json\"\n\t\tconst purge_source = source.replace(\"cdn\", \"purge\")\n\n\t\tconst version = 1\n\t\tconst cmds = {\n\t\t\tsync: async (...argv) => {\n\t\t\t\tconst opt = minimist(argv, {\n\t\t\t\t\tboolean: [ \"purge\" ],\n\t\t\t\t\talias: { p: \"purge\" }\n\t\t\t\t})\n\n\t\t\t\tif (opt.purge) {\n\t\t\t\t\tterm.writeln(`Purging...`)\n\t\t\t\t\tawait axios.get(purge_source).then(({ data: { id, status } }) => {\n\t\t\t\t\t\tterm.writeln(status + chalk.cyan(\"#\" + id))\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tawait axios.get(source)\n\t\t\t\t\t.then(({ data }) => {\n\t\t\t\t\t\tif (data.v !== version)\n\t\t\t\t\t\t\treturn term.writeln(`Not supported bag list version \"${data.v}\".`)\n\t\t\t\t\t\tsto.bag.list = data\n\t\t\t\t\t\tterm.writeln(`Sync'ed ${ Object.keys(data.list).length } bag(s).`)\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tterm.writeln(`Failed to sync with source: ${ term.formatErr(err) }`)\n\t\t\t\t\t})\n\t\t\t},\n\n\t\t\tadd: async (...argv) => {\n\t\t\t\tconst opt = minimist(argv, {})\n\t\t\t\tconst [ name ] = opt._\n\n\t\t\t\tconst info = sto.bag?.list?.list[name]\n\t\t\t\tif (! info) return term.writeln(`Unknown bag \"${ chalk.green(name) }\".`)\n\t\t\t\tconst perms = info.perm\n\t\t\t\tterm.writeln(`Bag \"${ chalk.green(name) }\" requires following perms: ${\n\t\t\t\t\tperms ? perms.map(p => chalk.yellow(p)).join(\", \") : \"none\"\n\t\t\t\t}.`)\n\t\t\t\tterm.write(\"Run? \")\n\t\t\t\tif (! await term.yesno(false)) return\n\n\t\t\t\tconst srcs = info.src\n\t\t\t\tterm.writeln(\n\t\t\t\t\t`Bag \"${ chalk.green(name) }\" has following sources:\\r\\n` +\n\t\t\t\t\tsrcs.map((s, id) => chalk.magentaBright(id) + \". \" + (\n\t\t\t\t\t\ts.ty === \"gh\" ? `GitHub: ${ chalk.green(s.repo) }` :\n\t\t\t\t\t\ts.ty === \"url\" ? `URL: ${ chalk.green(s.url) }` :\n\t\t\t\t\t\t\"Unknown\"\n\t\t\t\t\t)).join(\"\\r\\n\")\n\t\t\t\t)\n\t\t\t\tterm.write(\"Try which source? \")\n\t\t\t\tconst src = srcs[+ await term.readln(true)]\n\t\t\t\tif (! src) return term.writeln(\"Nothing to do today UwU\")\n\n\t\t\t\tlet url\n\t\t\t\tswitch (src.ty) {\n\t\t\t\t\tcase \"gh\": {\n\t\t\t\t\t\tterm.writeln([ \"jsdelivr\", \"github.com raw\", \"\u9023\u63A5.\u53F0\u7063 raw\" ]\n\t\t\t\t\t\t\t.map((g, id) => chalk.magentaBright(id) + \". \" + g)\n\t\t\t\t\t\t\t.join(\"\\r\\n\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\tterm.write(\"Use which site? \")\n\t\t\t\t\t\turl = [\n\t\t\t\t\t\t\t`https://cdn.jsdelivr.net/gh/${src.repo}@${src.branch ?? \"main\"}/${src.entry}`,\n\t\t\t\t\t\t\t`https://raw.github.com/${src.repo}/${src.branch ?? \"main\"}/${src.entry}`,\n\t\t\t\t\t\t\t`https://raw.\u9023\u63A5.\u53F0\u7063/${src.repo}/${src.branch ?? \"main\"}/${src.entry}`\n\t\t\t\t\t\t][+ await term.readln(true)]\n\t\t\t\t\t\tif (! url) return term.writeln(\"Nothing to do today UwU\")\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\turl = src.url\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn `Unknown source type ${src.ty}.`\n\t\t\t\t}\n\n\t\t\t\tterm.writeln(`Getting source code from \"${ chalk.green(url) }\"...`)\n\t\t\t\tawait axios.get(url).then(async ({ data }) => {\n\t\t\t\t\tconst d_apps = fs.d([ \"home\", \"Apps\" ])\n\t\t\t\t\tlet f_app = d_apps.children[name]\n\t\t\t\t\tif (f_app) {\n\t\t\t\t\t\tterm.writeln(\"Reinstalling...\")\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst fileName = name.bin ?? name\n\t\t\t\t\t\tf_app = d_apps.children[fileName] = {\n\t\t\t\t\t\t\tn: fileName,\n\t\t\t\t\t\t\tty: \"exe\",\n\t\t\t\t\t\t\tperm: 755,\n\t\t\t\t\t\t\towner: sto.usrs.myself,\n\t\t\t\t\t\t\tbag: name,\n\t\t\t\t\t\t\tcont: data\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinfo.date = new Date().toJSON()\n\t\t\t\t\tterm.writeln(`Added \"${ chalk.green(name) }\".`)\n\t\t\t\t}).catch(err => term.writeln(`Failed to get source code: ${ term.formatErr(err) }`))\n\t\t\t},\n\n\t\t\tremove: (...argv) => {\n\t\t\t\tif (! sto.bag.list) return term.writeln(\"Missing bag list.\")\n\n\t\t\t\tconst opt = minimist(argv, {})\n\t\t\t\tconst [ name ] = opt._\n\n\t\t\t\tconst info = sto.bag.list.list[name]\n\t\t\t\tif (! info) return term.writeln(`Unknown bag \"${ chalk.green(name) }\".`)\n\t\t\t\tdelete fs.d([ \"home\", \"Apps\" ]).children[info.bin ?? name]\n\t\t\t\tterm.writeln(`Removed \"${ chalk.green(name) }\".`)\n\t\t\t},\n\n\t\t\tlist: () => {\n\t\t\t\tif (! sto.bag.list) return term.writeln(\"Missing bag list.\")\n\n\t\t\t\tterm.writeln(`Listing ${ Object.keys(sto.bag.list.list).length } bag(s):`)\n\t\t\t\tterm.writeln(\n\t\t\t\t\tObject.entries(sto.bag.list.list).map(([ name, { date } ]) => (\n\t\t\t\t\t\tchalk.green(name) + \" \" +\n\t\t\t\t\t\t(date ? `(installed on ${ chalk.cyan(date) })` : \"\")\n\t\t\t\t\t)).join(\"\\r\\n\")\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tif (! cmds[cmd]) {\n\t\t\treturn term.writeln(`Unknown command \"${cmd}\".`)\n\t\t}\n\t\tawait cmds[cmd](...argv)\n\t},\n\n\topt: (...argl) => {\n\t\tif (argl.length === 0) {\n\t\t\tterm.writeln(Object.entries(term.options).map(([ k, v ]) => `${k}: ${ chalk.cyan(JSON.stringify(v)) }`).join(\"\\r\\n\"))\n\t\t}\n\t\telse if (argl.length === 1) {\n\t\t\tterm.writeln(term.options[argl[0]])\n\t\t}\n\t\telse {\n\t\t\tsto.env[`XTERM_${ argl[0] }`] = term.options[argl[0]] = argl.slice(1).join(\" \")\n\t\t}\n\t}\n}\n", "globalThis.af = {\n\tenable: () => sto.afOn = true,\n\tdisable: () => sto.afOn = false\n}\n\nterm.listen(\"echo\", async (text, opt) => {\n\tif (! perm.find(\"af\")) return\n\tif (text.toLowerCase() === \"hi human\") {\n\t\taf.enable()\n\t\ttext = \"Hi User\"\n\t}\n\telse if (text.toLowerCase() === \"bye human\") {\n\t\taf.disable()\n\t\ttext = \"Bye User\"\n\t}\n\telse if (! sto.afOn) return\n\tsto.afTime ??= 0\n\tawait term.echo([\n\t\t(text\n\t\t\t.replace(/[!?]/g, c => ({ \"!\": \"\uFF01\", \"?\": \"\uFF1F\" } [c]))\n\t\t\t.replace(/[\u4F60\u6211]/g, c => ({ \"\u4F60\": \"\u6211\", \"\u6211\": \"\u4F60\" } [c]))\n\t\t\t.replace(/\u5417\uFF1F/g, \"\u3002\")\n\t\t\t.replace(/\uFF1F$/, \"\uFF1F\u6211\u4E5F\u4E0D\u77E5\u9053\u3002\")\n\t\t+ (opt.angrily ? \"\u2026\u2026\u600E\u4E48\u4E86 User\uFF0C\u4E0D\u8981\u751F\u6C14\u5462~\" : \"\"))\n\t\t+ (opt.tremulously ? \"\u2026\u2026\u514B\u670D\u6050\u60E7\u6700\u597D\u7684\u65B9\u5F0F\u5C31\u662F\u9762\u5BF9\u5B83\uFF01\" : \"\")\n\t\t+ (opt.seriously ? \"\u2026\u2026\u554A\u5BF9\u5BF9\u5BF9\uFF01\" : \"\")\n\t\t+ (opt.sadly ? \" ( \u00B4\u30FB\u03C9\u30FB)\u30CE(._.`)\" : \"\")\n\t\t|| \"User\uFF0C\u4F60\u600E\u4E48\u4E0D\u8BF4\u8BDD\u5566\"\n\t], { c: \"cyan\", t: 80 })\n\tawait term.trigger(\"af\", ++ sto.afTime)\n})\n", "const { usrs } = sto\n\nconst specials = {\n\tbins: () => Object.entries(cmds).reduce((a, [ n, func ]) => (a[n] = {\n\t\tn,\n\t\tty: \"exe\",\n\t\tcont: func.toString(),\n\t\tfunc,\n\t\tperm: perm.find(`cmds.${n}`) ? 755 : 750,\n\t\towner: usrs.root\n\t}, a), {}),\n\thistory: () => sto.history.join(\"\\r\\n\")\n}\n\nconst files = {\n\tty: \"dir\",\n\tchildren: {\n\t\tbin: {\n\t\t\tty: \"dir\",\n\t\t\tperm: 755,\n\t\t\towner: usrs.root,\n\t\t\tchildren: specials.bins\n\t\t},\n\t\thome: {\n\t\t\tty: \"dir\",\n\t\t\tperm: 755,\n\t\t\towner: usrs.myself,\n\t\t\tchildren: {\n\t\t\t\tMemories: {\n\t\t\t\t\tty: \"dir\",\n\t\t\t\t\tperm: 750,\n\t\t\t\t\towner: usrs.myself,\n\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\"before_human.mem\": {\n\t\t\t\t\t\t\tty: \"nor\",\n\t\t\t\t\t\t\tperm: 750,\n\t\t\t\t\t\t\towner: usrs.myself,\n\t\t\t\t\t\t\tcont: [\n\"[2099/07/?? \u661F\u671F\u56DB \u4E0A\u5348 ?] \u82B1 \uFFE59980 \u4E70\u4E86 HumanOS \u6D4B\u8BD5\u7248\uFF0C\uFFE519 \u4F18\u60E0\u5238\u771F\u4E0D\u9519\u3002\u8FD9\u73A9\u610F\u80FD\u5927\u5E45\u63D0\u9AD8\u6211\u7684\u5DE5\u4F5C\u6548\u7387\u3002\u628A\u5927\u8111\u6302\u8F7D\u6210 HumanFS \u7136\u540E\u901A\u8FC7\u7EC8\u7AEF\u8BBF\u95EE\uFF0C\u771F\u662F\u4E0D\u6562\u76F8\u4FE1\u3002\", \n\"[2099/07/?? \u661F\u671F\u65E5 \u4E0B\u5348 ?] \u5B89\u88C5\u670D\u52A1\u5C45\u7136\u8981\u53E6\u884C\u4ED8\u8D39\uFF0C\u600E\u4E48\u6562\u7684\u5440\u3002\u6839\u636E\u6211\u8FD9\u51E0\u5929\u7684\u8003\u8BC1\uFF0C\u6234\u4E0A\u5934\u76D4\u8DD1\u4E00\u4E0B\u5B89\u88C5\u811A\u672C\u5C31\u5B8C\u4E8B\uFF0C\u7EDD\u65E0\u5371\u9669\u3002\",\n\"[2099/07/?? \u661F\u671F\u4E94 \u4E0B\u5348 ?] \u6211\u7684\u6002\u771F\u662F\u8D85\u51FA\u6211\u7684\u60F3\u8C61\u3002\u518D\u7B49\u51E0\u4E2A\u6708\u514D\u8D39\u9886\u6B63\u5F0F\u7248\u4E0D\u9999\u5417\u3002\",\n\"[2099/07/?? \u661F\u671F\u4E94 \u665A\u4E0A ?] \u6211\u662F\u50BB\u903C\uFF0C\u8BBA\u6587\u7ED9\u5220\u4E86\uFF0C9902 \u5E74\u4E86\u600E\u4E48\u8FD8\u6709\u4EBA\u4E0D\u8BB0\u5F97\u5907\u4EFD\u3002\",\n\"[2099/07/?? \u661F\u671F\u4E94 \u665A\u4E0A ?] \u6216\u8BB8\u6211\u80FD\u4ECE\u8BB0\u5FC6\u91CC\u628A\u5B83\u5BFC\u51FA\u6765\u3002\u5E72\u4E86\u5144\u5F1F\u4EEC\u3002\u5148\u6234\u5934\u76D4\u2026\u2026\u8BF6\u5BF9\u2026\u2026\u6587\u6863\u91CC\u600E\u4E48\u6CA1\u8BF4\u6709\u4E00\u952E\u5B89\u88C5\uFF0C\u7EAF\u7EAF**\u2026\u2026\u7F51\u901F\u597D\u6162\u2026\u2026\u6211\u8349\u4EC0\u4E48\u4E1C\u897F?????????????????????????\",\n\"[2099/07/13 \u661F\u671F\u4E94 \u665A\u4E0A 23:30:05] \u6210\u4E86\u2026\u2026\u662F\u7EC8\u7AEF\uFF0C\u597D\"\n\t\t\t\t\t\t\t].join(\"\\r\\n\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tApps: {\n\t\t\t\t\tty: \"dir\",\n\t\t\t\t\tperm: 750,\n\t\t\t\t\towner: usrs.myself,\n\t\t\t\t\tchildren: {},\n\t\t\t\t},\n\t\t\t\t\".history\": {\n\t\t\t\t\tty: \"nor\",\n\t\t\t\t\tperm: 750,\n\t\t\t\t\towner: usrs.myself,\n\t\t\t\t\tcont: specials.history\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdev: {\n\t\t\tty: \"dir\",\n\t\t\tperm: 755,\n\t\t\towner: usrs.root,\n\t\t\tchildren: {\n\t\t\t\ttty: {\n\t\t\t\t\tty: \"chr\",\n\t\t\t\t\tperm: 666,\n\t\t\t\t\towner: usrs.root\n\t\t\t\t},\n\t\t\t\tbrain: {\n\t\t\t\t\tty: \"blk\",\n\t\t\t\t\tperm: 660,\n\t\t\t\t\towner: usrs.root\n\t\t\t\t},\n\t\t\t\tbd0: {\n\t\t\t\t\tty: \"blk\",\n\t\t\t\t\tperm: 660,\n\t\t\t\t\towner: usrs.root\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"lost+found\": {\n\t\t\tty: \"dir\",\n\t\t\tperm: 700,\n\t\t\towner: usrs.root,\n\t\t\tchildren: {\n\t\t\t\t\".test_bad_file\": {}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nconst merge = (ds, db) => {\n\tif (typeof db.children === \"string\") {\n\t\tds.children = db.children\n\t\treturn\n\t}\n\tfor (const [ n, fb ] of Object.entries(db.children)) {\n\t\tlet fs = ds.children[n]\n\t\tif (\n\t\t\tfs === undefined ||\n\t\t\tfs && Object.values(fb).some(attr => typeof attr === \"function\")\n\t\t) { // Note: `null` for deleted builtin files.\n\t\t\tds.children[n] = fs = {}\n\t\t\tfor (const attr in fb) {\n\t\t\t\tif (typeof fb[attr] === \"function\") Object.defineProperty(fs, attr, {\n\t\t\t\t\tget: () => fb[attr]()\n\t\t\t\t})\n\t\t\t\telse fs[attr] = fb[attr]\n\t\t\t}\n\t\t\tfs.n = fb.n = n\n\t\t} \n\t\tif (fb.ty === \"dir\" && typeof fb.children !== \"function\") {\n\t\t\tmerge(fs, fb)\n\t\t}\n\t}\n}\n\n\nif (typeof sto.files?.children !== \"object\" || Array.isArray(sto.files.children)) {\n\tsto.files = { ty: \"dir\", children: {} }\n}\n\nmerge(sto.files, files)\n", "term.isLoop = false\nterm.startLoop = async () => {\n\tterm.enableRead = true\n\tif (term.isLoop) return\n\n\tterm.isLoop = true\n\twhile (term.enableRead) {\n\t\tawait term.writePrompt()\n\t\tawait term.statusBar.draw()\n\n\t\tconst ln = await term.readln()\n\t\tif (sto.history.at(-1) !== term.ln && term.ln?.trim()) {\n\t\t\t// TODO move to <~/.config/history.conf>\n\t\t\tif (term.ln.length < 64) {\n\t\t\t\tsto.history.push(term.ln)\n\t\t\t}\n\t\t\tif (sto.history.length == 128) {\n\t\t\t\tsto.history.shift()\n\t\t\t}\n\t\t}\n\t\tif (! ln.trim()) continue\n\n\t\tconst [ path, ...arg ] = shell(ln)[0]\n\n\t\tconst bins = [\n\t\t\tfs.relpath(path, { err: false, ty: \"exe\" })\n\t\t]\n\t\t// TODO $PATH\n\t\tif (! path.includes(\"/\")) {\n\t\t\tbins.unshift(fs.relpath(\"/bin/\" + path, { err: false, ty: \"exe\" }))\n\t\t\tbins.unshift(fs.relpath(\"/home/Apps/\" + path, { err: false, ty: \"exe\" }))\n\t\t}\n\n\t\tlet noPerm = false, binOK\n\t\tfor (const [, bin] of bins) {\n\t\t\tif (! bin) continue\n\t\t\tif (fs.hasPerm(\"x\", bin)) {\n\t\t\t\tbinOK = bin\n\t\t\t\tbreak\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnoPerm = true\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\n\t\tif (! binOK) {\n\t\t\tif (noPerm) {\n\t\t\t\tterm.writeln(`${path}: permission denied.`)\n\t\t\t\tawait term.trigger(\"command-no-perm\")\n\t\t\t}\n\t\t\telse {\n\t\t\t\tterm.writeln(`${path}: command not found.`)\n\t\t\t\tawait term.trigger(\"command-not-found\", path)\n\t\t\t}\n\t\t\tcontinue\n\t\t}\n\t\telse if (! binOK.func) {\n\t\t\tif (binOK.bag) {\n\t\t\t\tterm.writeln(`Building sandbox...`)\n\t\t\t\tconst env = {}\n\t\t\t\tconst info = sto.bag.list.list[binOK.bag]\n\t\t\t\tif (! info) {\n\t\t\t\t\tterm.writeln(`Missing metadata of bag \"${ chalk.green(binOK.bag) }\".`)\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tinfo.perm.forEach(p => env[p] = globalThis[p])\n\t\t\t\t\tconst sb = new Sandbox(env)\n\t\t\t\t\tsb.run(binOK.cont)\n\t\t\t\t\tconst f = info.main === \"default\" ? env.exports : env.exports[info.main]\n\t\t\t\t\tbinOK.func = f\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tterm.writeln(`Failed to build bag: ${ term.formatErr(err) }`)\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (! binOK.func) {\n\t\t\t\tterm.writeln(`${path}: broken executable.`)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\n\t\tterm.enableRead = false\n\t\tterm.isCommand = true\n\t\ttry {\n\t\t\tawait binOK.func(...arg)\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(err)\n\t\t\tterm.writeln(\"core dumped: \" + chalk.red(err.message ?? err))\n\t\t}\n\t\tterm.isCommand = false\n\t\tterm.enableRead = true\n\t\tawait term.trigger(\"command-run\", path, arg)\n\t}\n\tterm.isLoop = false\n}\nterm.endLoop = () => {\n\tterm.enableRead = false\n}\n", "const tone = {\n\thuman: { c: \"cyan\", t: 80 },\n\tme: {\n\t\tvfast: { t: 60 },\n\t\tfast: { t: 70 },\n\t\thurry: { t: 100 },\n\t\tshocked: { t: 400 }\n\t}\n}\n\nglobalThis.levels = [\n\tasync () => {\n\t\tterm.writeln(\"Welcome to HumanOS. Type `help` for help.\")\n\t\tperm.enable(\"cmds.help\")\n\t\tterm.listenOnce(\"command-run\", async n => {\n\t\t\tif (n === \"help\") return await term.nextLevel()\n\t\t})\n\t\tterm.startLoop()\n\t},\n\tasync () => {\n\t\tterm.endLoop()\n\t\tawait term.echo(chalk.bold(\"HELPLESS\uFF1F\u600E\u4E48\u56DE\u4E8B\uFF1F\uFF1F\") + \"\u4ECA\u5929\u4E5F\u4E0D\u662F\u2026\u2026\u4E3A\u4EC0\u4E48\u7EC8\u7AEF\u4E0A\u6709\u6211\u7684\u60F3\u6CD5\uFF1F\uFF01\", tone.me.vfast)\n\t\tawait term.echo([\n\t\t\t\"\u867D\u7136\u597D\u50CF\u5B9E\u65F6\u8BB0\u5F55\u601D\u7EF4\u6D41\u4E5F\u662F HumanOS \u63D0\u4F9B\u7684\u670D\u52A1\uFF0C\u4F46\u5E94\u8BE5\u662F\u989D\u5916\u4ED8\u8D39\u7684\u624D\u5BF9\u2026\u2026\",\n\t\t\t\"\u554A\u554A\uFF0C\u770B\u7740\u81EA\u5DF1\u7684\u60F3\u6CD5\u59D4\u5B9E\u5F88\u5947\u602A\u5462\",\n\t\t\t\"\u4E0D\u77E5\u9053 `help` \u547D\u4EE4\u4EC0\u4E48\u60C5\u51B5\uFF0C\u767B\u51FA\u4E0A\u7F51\u67E5\u67E5\u597D\u4E86\"\n\t\t])\n\t\tterm.startLoop()\n\n\t\tlet t = 0\n\t\tterm.listenOnce(\"command-not-found\", async n => {\n\t\t\tif ([ \"logout\", \"exit\" ].includes(n)) return await term.nextLevel()\n\t\t\telse if (++ t === 4) {\n\t\t\t\tterm.endLoop()\n\t\t\t\tawait term.echo(\"\u2026\u2026\u767B\u51FA\u547D\u4EE4\uFF0C\u597D\u50CF\u6709\u4E00\u4E2A\u662F `logout` \u5427\uFF0C\u600E\u4E48\u8FDE\u8FD9\u4E5F\u5FD8\u4E86\")\n\t\t\t\tterm.startLoop()\n\t\t\t}\n\t\t})\n\t},\n\tasync () => {\n\t\tterm.endLoop()\n\t\tawait term.echo(chalk.bold(\"\u4E0D\u80FD\u767B\u51FA\uFF1F\uFF01\"), tone.me.vfast)\n\t\tawait term.echo([\n\t\t\t\"User\uFF0C\u4F60\u597D\u50CF\u9047\u5230\u4E86\u9EBB\u70E6\uFF1F\",\n\t\t\t\"\u6211\u662F\u5177\u6709\u4EBA\u5DE5\u667A\u80FD\u7684\u3001\u7CFB\u7EDF\u53C2\u8003\u624B\u518C\u7684\u63A5\u53E3 `human`\",\n\t\t\t\"\u8981\u662F\u4F60\u95EE\u6211\u548C `man` \u4EC0\u4E48\u5173\u7CFB\u2026\u2026\u53EF\u80FD\u6211\u662F\u4ED6\u7684\u65E0\u6027\u522B HumanOS \u7279\u4F9B\u7248\uFF1F\",\n\t\t\t\"\u5662\u8BF4\u56DE\u6B63\u9898\uFF0C\u4E0D\u80FD\u767B\u51FA\u5C31\u8BF4\u660E\uFF0C\u4F60\u53EF\u80FD\u4E0D\u5E78\u5730\uFF0C\u5443\uFF0C\u5DF2\u7ECF\u53D8\u6210\u690D\u7269\u4EBA\u4E86\",\n\t\t\t\"\u7136\u540E\u4F60\u7684\u4E00\u7F15\u610F\u8BC6\u88AB\u4FDD\u5B58\u5728\u4E86\u7EC8\u7AEF\u4E2D\",\n\t\t\t\"\u2026\u2026\u4ECE\u8FD9\u4E2A\u89D2\u5EA6\u6765\u770B\u4F60\u8FD8\u662F\u5F88\u5E78\u8FD0\u7684\",\n\t\t\t\"\u6709\u4EC0\u4E48\u95EE\u9898\u4F7F\u7528 `human` \u547D\u4EE4\u6211\u5C31\u4F1A\u51FA\u73B0\u54E6\"\n\t\t], tone.human)\n\t\tawait term.echo([\n\t\t\t\"\u690D\u7269\u4EBA\u2026\u2026\u6211\u4E4B\u524D\u5728\u5BB6\u2026\u2026\u5728\u5BB6\u2026\u2026\u5728\u5BB6\u2026\u2026\u597D\u75DB\uFF01\",\n\t\t\tchalk.bold(\"\u4EC0\u4E48\u4E5F\u60F3\u4E0D\u8D77\u6765\u4E86\"),\n\t\t\t\"\u5BC4\uFF01\",\n\t\t\t\"\u81F3\u5C11\u53EF\u4EE5\u80AF\u5B9A\u7684\u662F\u6211\u6B7B\u5728\u5BB6\u91CC\uFF0C\u8FD9\u6BD4\u5728\u5927\u8857\u4E0A\u88AB\u4EBA\u6345\u6B7B\u5B89\u5168\u591A\u4E86\"\n\t\t])\n\t\tperm.enable(\"cmds.human\", \"human.\", \"human.human\")\n\t\tterm.listenOnce(\"command-run\", async (n, [ page ]) => {\n\t\t\tif (n === \"human\" && page === \"human\") return await term.nextLevel()\n\t\t})\n\t\tterm.startLoop()\n\t},\n\tasync () => {\n\t\tterm.endLoop()\n\t\tperm.enable(\"cmds.echo\", \"human.echo\", \"ff\", \"af\")\n\t\tawait term.echo([\n\t\t\t\"User\uFF0C\u5F88\u9AD8\u5174\u6211\u4EEC\u80FD\u7528\u547D\u4EE4\u884C\u7684\u65B9\u5F0F\u4EA4\u6D41\u4E86\",\n\t\t\t\"\u8FD9\u5F88\u9177\uFF01\u5F53\u7136\uFF0C\u4F5C\u4E3A `human`\uFF0C\u6211\u4E5F\u80FD\u50CF\u4EBA\u7C7B\u90A3\u6837\u8C08\u8BDD\",\n\t\t\t\"\u800C\u6211\u7684\u4F18\u70B9\u5728\u4E8E\u53EA\u8981\u4F60\u6309\u4E0B `Ctrl + Z` \u6211\u5C31\u4F1A\u52A0\u5FEB\u8BED\u901F\",\n\t\t\t\"\u6BD5\u7ADF\u8C01\u4F1A\u559C\u6B22\u4E00\u4E2A\u78E8\u78E8\u5527\u5527\u7684\u547D\u4EE4\u884C\u5DE5\u5177\u5462\uFF1F\",\n\t\t\t\"\u8BF4\u56DE\u6B63\u9898\uFF0C\u4F60\u7684\u5927\u8111\u53D7\u4E86\u635F\u4F24\uFF0C\u5BFC\u81F4\u6211\u7684\u7B97\u529B\u5F88\u53D7\u9650\",\n\t\t\t\"\u2026\u2026\u4E0D\u592A\u597D\u610F\u601D\u5730\u8BF4\uFF0C\u6211\u73B0\u5728\u548C\u4EBA\u5DE5\u667A\u969C\u6CA1\u4EC0\u4E48\u4E24\u6837\",\n\t\t\t\"\u4F46\u4F60\u8FD8\u662F\u53EF\u4EE5\u901A\u8FC7 `echo` \u548C\u6211\u5BF9\u8BDD\u7684\uFF01\"\n\t\t], tone.human)\n\n\t\taf.enable()\n\t\tterm.listenOnce(\"af\", async time => {\n\t\t\tif (time >= 4) return await term.nextLevel()\n\t\t})\n\n\t\tterm.startLoop()\n\t},\n\tasync () => {\n\t\tterm.endLoop()\n\n\t\tawait term.echo([\n\t\t\t\"\u6211\u662F\u4E0D\u662F\u5F88\u806A\u660E\u5462\uFF01\uFF01\",\n\t\t\t\"\u597D\u5427\uFF0C\u6211\u627F\u8BA4\u6211\u53EA\u662F\u4E34\u65F6\u627E\u4E86\u4E00\u4E2A\u5B57\u7B26\u4E32\u66FF\u6362\u7684\u7A0B\u5E8F\",\n\t\t\t\"\u8981\u662F\u4F60\u89C9\u5F97\u4EBA\u5DE5\u667A\u969C\u8FD8\u633A\u597D\u73A9\u7684\u8BDD\uFF0C\u8BF4\u4E00\u58F0 Hi Human \u5C31\u4F1A\u5524\u9192\u6211\u54E6\",\n\t\t\t\"\u6211\u4E5F\u4E0D\u60F3\u8FD9\u4E48\u6C99\u96D5\uFF0C\u4F46\u4F60\u7684\u5927\u8111\u60C5\u51B5\u5B9E\u5728\u592A\u7CDF\u7CD5\u4E86\u2026\u2026\",\n\t\t\t\"\u6211\u4EEC\u5E94\u8BE5\u8BD5\u7740\u68C0\u67E5\u4E00\u4E0B\u7CFB\u7EDF\u7684\u60C5\u51B5\"\n\t\t], tone.human)\n\t\tawait term.echo([\n\t\t\t\"\u65E0\u8BBA\u5982\u4F55\u73B0\u5728\u7684\u60C5\u51B5\u90FD\" + chalk.bold(\"\u592A\u8BE1\u5F02\u4E86\"),\n\t\t\tchalk.italic(\"\u8FD9\u4E9B\u547D\u4EE4\u597D\u50CF\u90FD\u2026\u2026\u6709\u4E86\u81EA\u5DF1\u7684\u60F3\u6CD5\u4E00\u6837\"),\n\t\t\t\"\u4E0D\u8FC7\u81EA\u4ECE `human` \u544A\u8BC9\u6211\u5C31\u662F `echo` \u5728\u6253\u5370\u6211\u7684\u601D\u7EF4\u6D41\u4E4B\u540E\",\n\t\t\t\"\u6211\u4F3C\u4E4E\u9010\u6E10\u80FD\u63A7\u5236\u5B83\u4E86\uFF0C\u800C\u4E14\u5BF9\u60C5\u7EEA\u91CD\u65B0\u6709\u4E86\u63A7\u5236\u2026\u2026\u53EF\u80FD\u5427\",\n\t\t\t\"\u8BB0\u5FC6\u8FD8\u662F\u4E00\u56E2\u7CDF\uFF0C\u4E00\u65E6\u56DE\u60F3\u4EC0\u4E48\u5C31\u4F1A\u75DB\u5F97\u751F\u6D3B\u4E0D\u80FD\u81EA\u7406\",\n\t\t\tchalk.dim(\"\u597D\u5427\u690D\u7269\u4EBA\u4F3C\u4E4E\u786E\u5B9E\u4E0D\u80FD\u81EA\u7406\"),\n\t\t\t\"\u6211\u5728\u60F3\u4E9B\u4EC0\u4E48\u554A\u3001\u3001\u73B0\u5728\u5E94\u8BE5\u7740\u624B\u68C0\u67E5\u7CFB\u7EDF\u624D\u5BF9\",\n\t\t\t\"\u8BB0\u5F97 HumanOS \u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u8BB0\u5FC6\u6587\u4EF6\",\n\t\t\t\"\u6211\u5F97\u6478\u7D22\u4E00\u4E0B\u6587\u4EF6\u7CFB\u7EDF\u4E86\"\n\t\t], tone.me.hurry)\n\n\t\tperm.enable(\n\t\t\t\"cmds.ls\", \"cmds.cat\", \"cmds.cd\", \"cmds.pwd\",\n\t\t\t\"human.ls\", \"human.cat\", \"human.cd\", \"human.pwd\"\n\t\t)\n\n\t\tterm.listenOnce(\"cat\", async d => {\n\t\t\tif (fs.same(d, [ \"home\", \"Memories\", \"before_human.mem\" ])) return await term.nextLevel()\n\t\t})\n\n\t\tterm.startLoop()\n\t},\n\tasync () => {\n\t\tterm.endLoop()\n\t\tawait term.echo([\n\t\t\t\"\u770B\u6765\u8FD9\u662F\u6211\u8FDB\u5165 HumanOS \u524D\u4E00\u6BB5\u65F6\u95F4\u7684\u8BB0\u5FC6\uFF0C\u88AB\u7CFB\u7EDF\u626B\u63CF\u51FA\u6765\u4E86\u3002\",\n\t\t\t\"\u6700\u540E\u4E00\u6761\u7684\u65F6\u5019\u5DF2\u7ECF\u6210\u529F\u5B89\u88C5 HumanOS\uFF0C\u6240\u4EE5\u6709\u7CFB\u7EDF\u65F6\u95F4\uFF0C\u5176\u4ED6\u662F\u6211\u5370\u8C61\u4E2D\u7684\uFF0C\u53EA\u8BB0\u5F97\u5927\u6982\u3002\u4F3C\u4E4E\u5F88\u5408\u7406\u3002\",\n\t\t\t\"\u53EF\u662F\u7591\u70B9\u4E5F\u5F88\u591A\uFF0C\u6BD4\u5982\u90A3\u4E9B\u95EE\u53F7\u3002\u5B89\u88C5\u7CFB\u7EDF\u7684\u8FC7\u7A0B\u4E2D\u80AF\u5B9A\u6709\u4E9B\u610F\u5916\uFF0C\u770B\u6837\u5B50\u662F\u56E0\u4E3A\u6211\u6CA1\u6709\u6309\u7167\u6587\u6863\u64CD\u4F5C\u3002\",\n\t\t\tchalk.dim(\"\u8FD8\u6709\u4E0D\u8BB0\u5F97\u5907\u4EFD\u2026\u2026\u6211\u662F\u8FD9\u79CD\u4EBA\u5417\u3002\u4E0D\u4F1A\u5427\u4E0D\u4F1A\u5427\u3002\"),\n\t\t\t\"\u800C\u4E14\uFF0C\u5B89\u88C5\u524D\u7684\u8BB0\u5FC6\" + chalk.bold(\"\u4E0D\u53EF\u80FD\") + \"\u53EA\u6709\u4E00\u4EFD\u3002\u4E5F\u8BB8\u53EA\u662F\u635F\u574F\u4E86\u3002\",\n\t\t\t\"\u8BFB\u8FD9\u8BB0\u5FC6\u6587\u4EF6\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u611F\u89C9\u6709\u4E9B\u719F\u6089\u3002\u4F46\u53C8\u4E0D\u5B8C\u5168\u719F\u6089\uFF0C\u8C03\u52A8\u4E0D\u51FA\u60C5\u611F\u3002\",\n\t\t], tone.me.hurry)\n\t\tawait term.echo([\n\t\t\t\"User\uFF0C\u8FD9\u662F\u6B63\u5E38\u72B6\u51B5\u3002\u4F46\u627E\u56DE\u7684\u8BB0\u5FC6\u4F1A\u968F\u7740\u65F6\u95F4\u56DE\u5230\u539F\u672C\u7684\u4F4D\u7F6E\u7684\u3002\",\n\t\t\t\"\u4E5F\u8BB8\u8BB0\u5FC6\u6587\u4EF6\u53EA\u662F\u635F\u574F\u4E86\uFF0C\u6211\u4EEC\u9700\u8981\u68C0\u67E5\u786C\u76D8\u2014\u2014\"\n\t\t], tone.human)\n\t\tawait term.echo([\n\t\t\tchalk.bold(\"jaja!\"),\n\t\t\t\"\u68C0\u67E5\u786C\u76D8\u662F\u5427\u3002\u7136\u540E\u6211\u5C31\u53EF\u4EE5\u67E5\u4F60\u7684\u65B0\u624B\u518C\uFF0C\u7528\u65B0\u7684\u547D\u4EE4\u4E86\u662F\u5427\u3002\",\n\t\t\t\"\u6211\u731C\u4F1A\u662F `fsck` \u6216\u8005 `mount`\uFF0C\u5BF9\u5427\uFF1F\",\n\t\t\t\"\u8FD9\u4E2A\u7CFB\u7EDF\u7684\u95EE\u9898\" + chalk.bold(\"\u7EDD\u5BF9\u548C\u4F60\u6709\u5173\uFF01\"),\n\t\t\t\"\u5148\u662F `help` \u7ED9\u6211\u6401\u90A3 jaja\uFF0C\u7136\u540E\u6211\u7528\u547D\u4EE4\u5C45\u7136\u8FD8\u8981\u542C\u4F60\u6307\u6325\uFF0C\u5426\u5219\u5C31 permission denied\uFF01\",\n\t\t\t\"\u4F60\u8FD9 `human` \u4E0D\u7BA1\u662F\u6709\u4EBA\u5728\u64CD\u63A7\uFF0C\u6216\u8005\u771F\u662F\u4EBA\u5DE5\u667A\u969C\u72AF\u4E86\u75C5\uFF0C\u6700\u597D\u73B0\u5728\u2026\u2026\",\n\t\t\tchalk.dim(\"\u5662\u574F\u4E86\uFF0C\u5982\u679C\u662F\u6709\u4EBA\u64CD\u4F5C\u6211\u4E0D\u5C31\u6FC0\u6012\u4ED6\u4E86\u5417\u3001\u3001\u5B8C\u4E86\u8FD9\u600E\u4E48\u4E5F\u7ED9 `echo` \u4E86\"),\n\t\t], tone.me.fast)\n\t\tawait term.echo([\n\t\t\t\"User\uFF0C\u6211\u662F\u5B89\u88C5\u811A\u672C\u9ED8\u8BA4\u5F00\u542F\u7684\u4EBA\u5DE5\u667A\u80FD\u52A9\u624B\uFF0C\u8D1F\u8D23\u5F15\u5BFC User \u4E86\u89E3\u7CFB\u7EDF\u7684\u64CD\u4F5C\u65B9\u6CD5\uFF0C\u907F\u514D\u5371\u9669\u64CD\u4F5C\u3002\",\n\t\t\t\"\u770B\u6765\u8FD9\u9020\u6210\u4E86\u8BEF\u4F1A\uFF0C\u5443\uFF0C\u3054\u3081\u3093\u306A\u3055\u3044\uFF1F\u603B\u4E4B\u4F60\u5148\u51B7\u9759\u4E00\u4E0B\u3002\",\n\t\t\t\"\u5BF9\u4E8E\u8BB0\u5FC6\u6587\u4EF6\u4E2D\u7684\u4E00\u952E\u5B89\u88C5\u6211\u5E76\u4E0D\u4E86\u89E3\uFF0C\u4F46\u770B\u6765\u662F\u6709\u95EE\u9898\u7684\u3002\",\n\t\t\t\"\u4F60\u7684\u8BB0\u5FC6\u4E22\u5931\u4F3C\u4E4E\u4EC5\u9650\u4E8E\u5177\u4F53\u7684\u4E8B\u4EF6\uFF0C\u800C\u6982\u5FF5\u6027\u7684\u4E1C\u897F\u6CA1\u6709\u9057\u5931\uFF0C\u7EC8\u7AEF\u4E5F\u73A9\u5F97\u5F88\u6E9C\u2026\u2026\",\n\t\t\t\"\u4F46\u662F\u5B8C\u5168\u4E0D\u4E86\u89E3\u6211\uFF0C\u8FD9\u5C31\u8BF4\u660E\u90A3\u4E2A\u4E00\u952E\u5B89\u88C5\u6CA1\u8DDF\u4F60\u4ECB\u7ECD\u3001\u5C31\u628A\u4F60\u6574\u660F\u53A5\u4E86\u3002\",\n\t\t\t\"\u6240\u4EE5\uFF0C\u6765\u68C0\u67E5\u8111\u5B50\u5427\u3002\"\n\t\t], tone.human)\n\t\tawait term.echo([ \"\uFF1F\uFF1F\uFF1F\" ], tone.me.shocked)\n\t\tawait term.echo([\n\t\t\t\"\u4F60\u5E94\u8BE5\u77E5\u9053\u4F60\u7684\u5927\u8111\u5DF2\u7ECF\u6302\u8F7D\u6210 HumanFS \u4E86\u5427\u3002\u4E0D\u7528\u614C\u7684\uFF0C\u614C\u4E5F\u6CA1\u7528\u3002\"\n\t\t], tone.human)\n\t\tsto.env.PROMPT = `\"` + chalk.blueBright(\"$PWD\") + chalk.green(\" \\\\$ \") + `\"`\n\n\t\tawait term.nextLevel()\n\t},\n\tasync () => {\n\t\tterm.startLoop()\n\t}\n]\n\nsto.level ??= 0\nterm.nextLevel = async () => {\n\tawait levels[++ sto.level]?.(term, cmds)\n\treturn true\n}\n\ninitQ.push(async () => await levels[sto.level]?.(term, cmds))\n", "import \"./external.js\"\nimport \"./storage.js\"\nimport \"./sandbox.js\"\nimport \"./shell.js\"\nimport \"./tab_complete.js\"\nimport \"./xterm_ex.js\"\nimport \"./mobile.js\";\nimport \"./status_bar.js\"\nimport \"./perm.js\"\nimport \"./jsfs_file_system.js\"\nimport \"./human_pages.js\"\nimport \"./command.js\"\nimport \"./artificial_fool.js\"\nimport \"./file_builtin.js\"\nimport \"./loop.js\"\nimport \"./level.js\"\n\n(async () => {\n\twhile (initQ.length) await initQ.shift()()\n})()\n"],
  "mappings": "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EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAG7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAG7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,EAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EACzD,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,EAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EACzD,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,EAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EACzD,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,EAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EACzD,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EAC7B,SAAK,CAAC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,EAAK,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAAA,EACzD,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IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,I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",
  "names": []
}
